{"ast":null,"code":"'use strict';\n\nconst {\n  querySelectorAll\n} = require('../lib/xast.js');\n\nexports.name = 'removeAttributesBySelector';\nexports.type = 'visitor';\nexports.active = false;\nexports.description = 'removes attributes of elements that match a css selector';\n/**\n * Removes attributes of elements that match a css selector.\n *\n * @example\n * <caption>A selector removing a single attribute</caption>\n * plugins: [\n *   {\n *     name: \"removeAttributesBySelector\",\n *     params: {\n *       selector: \"[fill='#00ff00']\"\n *       attributes: \"fill\"\n *     }\n *   }\n * ]\n *\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"#00ff00\" stroke=\"#00ff00\"/>\n *   ↓\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" stroke=\"#00ff00\"/>\n *\n * <caption>A selector removing multiple attributes</caption>\n * plugins: [\n *   {\n *     name: \"removeAttributesBySelector\",\n *     params: {\n *       selector: \"[fill='#00ff00']\",\n *       attributes: [\n *         \"fill\",\n *         \"stroke\"\n *       ]\n *     }\n *   }\n * ]\n *\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"#00ff00\" stroke=\"#00ff00\"/>\n *   ↓\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\"/>\n *\n * <caption>Multiple selectors removing attributes</caption>\n * plugins: [\n *   {\n *     name: \"removeAttributesBySelector\",\n *     params: {\n *       selectors: [\n *         {\n *           selector: \"[fill='#00ff00']\",\n *           attributes: \"fill\"\n *         },\n *         {\n *           selector: \"#remove\",\n *           attributes: [\n *             \"stroke\",\n *             \"id\"\n *           ]\n *         }\n *       ]\n *     }\n *   }\n * ]\n *\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"#00ff00\" stroke=\"#00ff00\"/>\n *   ↓\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\"/>\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|MDN CSS Selectors\n *\n * @author Bradley Mease\n *\n * @type {import('../lib/types').Plugin<any>}\n */\n\nexports.fn = (root, params) => {\n  const selectors = Array.isArray(params.selectors) ? params.selectors : [params];\n\n  for (const {\n    selector,\n    attributes\n  } of selectors) {\n    const nodes = querySelectorAll(root, selector);\n\n    for (const node of nodes) {\n      if (node.type === 'element') {\n        if (Array.isArray(attributes)) {\n          for (const name of attributes) {\n            delete node.attributes[name];\n          }\n        } else {\n          delete node.attributes[attributes];\n        }\n      }\n    }\n  }\n\n  return {};\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-svgo/node_modules/svgo/plugins/removeAttributesBySelector.js"],"names":["querySelectorAll","require","exports","name","type","active","description","fn","root","params","selectors","Array","isArray","selector","attributes","nodes","node"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAuBC,OAAO,CAAC,gBAAD,CAApC;;AAEAC,OAAO,CAACC,IAAR,GAAe,4BAAf;AACAD,OAAO,CAACE,IAAR,GAAe,SAAf;AACAF,OAAO,CAACG,MAAR,GAAiB,KAAjB;AACAH,OAAO,CAACI,WAAR,GACE,0DADF;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,OAAO,CAACK,EAAR,GAAa,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC7B,QAAMC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcH,MAAM,CAACC,SAArB,IACdD,MAAM,CAACC,SADO,GAEd,CAACD,MAAD,CAFJ;;AAGA,OAAK,MAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAX,IAAuCJ,SAAvC,EAAkD;AAChD,UAAMK,KAAK,GAAGf,gBAAgB,CAACQ,IAAD,EAAOK,QAAP,CAA9B;;AACA,SAAK,MAAMG,IAAX,IAAmBD,KAAnB,EAA0B;AACxB,UAAIC,IAAI,CAACZ,IAAL,KAAc,SAAlB,EAA6B;AAC3B,YAAIO,KAAK,CAACC,OAAN,CAAcE,UAAd,CAAJ,EAA+B;AAC7B,eAAK,MAAMX,IAAX,IAAmBW,UAAnB,EAA+B;AAC7B,mBAAOE,IAAI,CAACF,UAAL,CAAgBX,IAAhB,CAAP;AACD;AACF,SAJD,MAIO;AACL,iBAAOa,IAAI,CAACF,UAAL,CAAgBA,UAAhB,CAAP;AACD;AACF;AACF;AACF;;AACD,SAAO,EAAP;AACD,CAnBD","sourcesContent":["'use strict';\n\nconst { querySelectorAll } = require('../lib/xast.js');\n\nexports.name = 'removeAttributesBySelector';\nexports.type = 'visitor';\nexports.active = false;\nexports.description =\n  'removes attributes of elements that match a css selector';\n\n/**\n * Removes attributes of elements that match a css selector.\n *\n * @example\n * <caption>A selector removing a single attribute</caption>\n * plugins: [\n *   {\n *     name: \"removeAttributesBySelector\",\n *     params: {\n *       selector: \"[fill='#00ff00']\"\n *       attributes: \"fill\"\n *     }\n *   }\n * ]\n *\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"#00ff00\" stroke=\"#00ff00\"/>\n *   ↓\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" stroke=\"#00ff00\"/>\n *\n * <caption>A selector removing multiple attributes</caption>\n * plugins: [\n *   {\n *     name: \"removeAttributesBySelector\",\n *     params: {\n *       selector: \"[fill='#00ff00']\",\n *       attributes: [\n *         \"fill\",\n *         \"stroke\"\n *       ]\n *     }\n *   }\n * ]\n *\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"#00ff00\" stroke=\"#00ff00\"/>\n *   ↓\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\"/>\n *\n * <caption>Multiple selectors removing attributes</caption>\n * plugins: [\n *   {\n *     name: \"removeAttributesBySelector\",\n *     params: {\n *       selectors: [\n *         {\n *           selector: \"[fill='#00ff00']\",\n *           attributes: \"fill\"\n *         },\n *         {\n *           selector: \"#remove\",\n *           attributes: [\n *             \"stroke\",\n *             \"id\"\n *           ]\n *         }\n *       ]\n *     }\n *   }\n * ]\n *\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" fill=\"#00ff00\" stroke=\"#00ff00\"/>\n *   ↓\n * <rect x=\"0\" y=\"0\" width=\"100\" height=\"100\"/>\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|MDN CSS Selectors\n *\n * @author Bradley Mease\n *\n * @type {import('../lib/types').Plugin<any>}\n */\nexports.fn = (root, params) => {\n  const selectors = Array.isArray(params.selectors)\n    ? params.selectors\n    : [params];\n  for (const { selector, attributes } of selectors) {\n    const nodes = querySelectorAll(root, selector);\n    for (const node of nodes) {\n      if (node.type === 'element') {\n        if (Array.isArray(attributes)) {\n          for (const name of attributes) {\n            delete node.attributes[name];\n          }\n        } else {\n          delete node.attributes[attributes];\n        }\n      }\n    }\n  }\n  return {};\n};\n"]},"metadata":{},"sourceType":"script"}