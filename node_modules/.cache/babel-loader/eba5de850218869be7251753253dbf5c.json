{"ast":null,"code":"'use strict';\n\nconst lengthConv = new Map([['in', 96], ['px', 1], ['pt', 4 / 3], ['pc', 16]]);\nconst timeConv = new Map([['s', 1000], ['ms', 1]]);\nconst angleConv = new Map([['turn', 360], ['deg', 1]]);\n\nfunction dropLeadingZero(number) {\n  const value = String(number);\n\n  if (number % 1) {\n    if (value[0] === '0') {\n      return value.slice(1);\n    }\n\n    if (value[0] === '-' && value[1] === '0') {\n      return '-' + value.slice(2);\n    }\n  }\n\n  return value;\n}\n\nfunction transform(number, originalUnit, conversions) {\n  let conversionUnits = [...conversions.keys()].filter(u => {\n    return originalUnit !== u;\n  });\n  const base = number * conversions.get(originalUnit);\n  return conversionUnits.map(u => dropLeadingZero(base / conversions.get(u)) + u).reduce((a, b) => a.length < b.length ? a : b);\n}\n\nmodule.exports = function (number, unit, _ref) {\n  let {\n    time,\n    length,\n    angle\n  } = _ref;\n  let value = dropLeadingZero(number) + (unit ? unit : '');\n  let converted;\n  const lowerCaseUnit = unit.toLowerCase();\n\n  if (length !== false && lengthConv.has(lowerCaseUnit)) {\n    converted = transform(number, lowerCaseUnit, lengthConv);\n  }\n\n  if (time !== false && timeConv.has(lowerCaseUnit)) {\n    converted = transform(number, lowerCaseUnit, timeConv);\n  }\n\n  if (angle !== false && angleConv.has(lowerCaseUnit)) {\n    converted = transform(number, lowerCaseUnit, angleConv);\n  }\n\n  if (converted && converted.length < value.length) {\n    value = converted;\n  }\n\n  return value;\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-convert-values/src/lib/convert.js"],"names":["lengthConv","Map","timeConv","angleConv","dropLeadingZero","number","value","String","slice","transform","originalUnit","conversions","conversionUnits","keys","filter","u","base","get","map","reduce","a","b","length","module","exports","unit","time","angle","converted","lowerCaseUnit","toLowerCase","has"],"mappings":"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","sourcesContent":["'use strict';\nconst lengthConv = new Map([\n  ['in', 96],\n  ['px', 1],\n  ['pt', 4 / 3],\n  ['pc', 16],\n]);\n\nconst timeConv = new Map([\n  ['s', 1000],\n  ['ms', 1],\n]);\n\nconst angleConv = new Map([\n  ['turn', 360],\n  ['deg', 1],\n]);\n\nfunction dropLeadingZero(number) {\n  const value = String(number);\n\n  if (number % 1) {\n    if (value[0] === '0') {\n      return value.slice(1);\n    }\n\n    if (value[0] === '-' && value[1] === '0') {\n      return '-' + value.slice(2);\n    }\n  }\n\n  return value;\n}\n\nfunction transform(number, originalUnit, conversions) {\n  let conversionUnits = [...conversions.keys()].filter((u) => {\n    return originalUnit !== u;\n  });\n\n  const base = number * conversions.get(originalUnit);\n\n  return conversionUnits\n    .map((u) => dropLeadingZero(base / conversions.get(u)) + u)\n    .reduce((a, b) => (a.length < b.length ? a : b));\n}\n\nmodule.exports = function (number, unit, { time, length, angle }) {\n  let value = dropLeadingZero(number) + (unit ? unit : '');\n  let converted;\n  const lowerCaseUnit = unit.toLowerCase();\n  if (length !== false && lengthConv.has(lowerCaseUnit)) {\n    converted = transform(number, lowerCaseUnit, lengthConv);\n  }\n\n  if (time !== false && timeConv.has(lowerCaseUnit)) {\n    converted = transform(number, lowerCaseUnit, timeConv);\n  }\n\n  if (angle !== false && angleConv.has(lowerCaseUnit)) {\n    converted = transform(number, lowerCaseUnit, angleConv);\n  }\n\n  if (converted && converted.length < value.length) {\n    value = converted;\n  }\n\n  return value;\n};\n"]},"metadata":{},"sourceType":"script"}