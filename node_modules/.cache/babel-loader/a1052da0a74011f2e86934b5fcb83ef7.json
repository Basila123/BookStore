{"ast":null,"code":"'use strict';\n\nconst {\n  attrsGroups\n} = require('./_collections.js');\n\nexports.type = 'visitor';\nexports.name = 'removeEmptyAttrs';\nexports.active = true;\nexports.description = 'removes empty attributes';\n/**\n * Remove attributes with empty values.\n *\n * @author Kir Belevich\n *\n * @type {import('../lib/types').Plugin<void>}\n */\n\nexports.fn = () => {\n  return {\n    element: {\n      enter: node => {\n        for (const [name, value] of Object.entries(node.attributes)) {\n          if (value === '' && // empty conditional processing attributes prevents elements from rendering\n          attrsGroups.conditionalProcessing.includes(name) === false) {\n            delete node.attributes[name];\n          }\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-svgo/node_modules/svgo/plugins/removeEmptyAttrs.js"],"names":["attrsGroups","require","exports","type","name","active","description","fn","element","enter","node","value","Object","entries","attributes","conditionalProcessing","includes"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,mBAAD,CAA/B;;AAEAC,OAAO,CAACC,IAAR,GAAe,SAAf;AACAD,OAAO,CAACE,IAAR,GAAe,kBAAf;AACAF,OAAO,CAACG,MAAR,GAAiB,IAAjB;AACAH,OAAO,CAACI,WAAR,GAAsB,0BAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,OAAO,CAACK,EAAR,GAAa,MAAM;AACjB,SAAO;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAGC,IAAD,IAAU;AACf,aAAK,MAAM,CAACN,IAAD,EAAOO,KAAP,CAAX,IAA4BC,MAAM,CAACC,OAAP,CAAeH,IAAI,CAACI,UAApB,CAA5B,EAA6D;AAC3D,cACEH,KAAK,KAAK,EAAV,IACA;AACAX,UAAAA,WAAW,CAACe,qBAAZ,CAAkCC,QAAlC,CAA2CZ,IAA3C,MAAqD,KAHvD,EAIE;AACA,mBAAOM,IAAI,CAACI,UAAL,CAAgBV,IAAhB,CAAP;AACD;AACF;AACF;AAXM;AADJ,GAAP;AAeD,CAhBD","sourcesContent":["'use strict';\n\nconst { attrsGroups } = require('./_collections.js');\n\nexports.type = 'visitor';\nexports.name = 'removeEmptyAttrs';\nexports.active = true;\nexports.description = 'removes empty attributes';\n\n/**\n * Remove attributes with empty values.\n *\n * @author Kir Belevich\n *\n * @type {import('../lib/types').Plugin<void>}\n */\nexports.fn = () => {\n  return {\n    element: {\n      enter: (node) => {\n        for (const [name, value] of Object.entries(node.attributes)) {\n          if (\n            value === '' &&\n            // empty conditional processing attributes prevents elements from rendering\n            attrsGroups.conditionalProcessing.includes(name) === false\n          ) {\n            delete node.attributes[name];\n          }\n        }\n      },\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"script"}