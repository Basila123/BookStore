{"ast":null,"code":"'use strict';\n\nconst transform = require('./lib/transform.js');\n/**\n * @typedef {{precision?: number | false,\n *          preserve?: boolean,\n *          warnWhenCannotResolve?: boolean,\n *          mediaQueries?: boolean,\n *          selectors?: boolean}} PostCssCalcOptions\n */\n\n/**\n * @type {import('postcss').PluginCreator<PostCssCalcOptions>}\n * @param {PostCssCalcOptions} opts\n * @return {import('postcss').Plugin}\n */\n\n\nfunction pluginCreator(opts) {\n  const options = Object.assign({\n    precision: 5,\n    preserve: false,\n    warnWhenCannotResolve: false,\n    mediaQueries: false,\n    selectors: false\n  }, opts);\n  return {\n    postcssPlugin: 'postcss-calc',\n\n    OnceExit(css, _ref) {\n      let {\n        result\n      } = _ref;\n      css.walk(node => {\n        const {\n          type\n        } = node;\n\n        if (type === 'decl') {\n          transform(node, 'value', options, result);\n        }\n\n        if (type === 'atrule' && options.mediaQueries) {\n          transform(node, 'params', options, result);\n        }\n\n        if (type === 'rule' && options.selectors) {\n          transform(node, 'selector', options, result);\n        }\n      });\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-calc/src/index.js"],"names":["transform","require","pluginCreator","opts","options","Object","assign","precision","preserve","warnWhenCannotResolve","mediaQueries","selectors","postcssPlugin","OnceExit","css","result","walk","node","type","postcss","module","exports"],"mappings":"AAAA;;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CACd;AACEC,IAAAA,SAAS,EAAE,CADb;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,qBAAqB,EAAE,KAHzB;AAIEC,IAAAA,YAAY,EAAE,KAJhB;AAKEC,IAAAA,SAAS,EAAE;AALb,GADc,EAQdR,IARc,CAAhB;AAWA,SAAO;AACLS,IAAAA,aAAa,EAAE,cADV;;AAELC,IAAAA,QAAQ,CAACC,GAAD,QAAkB;AAAA,UAAZ;AAAEC,QAAAA;AAAF,OAAY;AACxBD,MAAAA,GAAG,CAACE,IAAJ,CAAUC,IAAD,IAAU;AACjB,cAAM;AAAEC,UAAAA;AAAF,YAAWD,IAAjB;;AACA,YAAIC,IAAI,KAAK,MAAb,EAAqB;AACnBlB,UAAAA,SAAS,CAACiB,IAAD,EAAO,OAAP,EAAgBb,OAAhB,EAAyBW,MAAzB,CAAT;AACD;;AAED,YAAIG,IAAI,KAAK,QAAT,IAAqBd,OAAO,CAACM,YAAjC,EAA+C;AAC7CV,UAAAA,SAAS,CAACiB,IAAD,EAAO,QAAP,EAAiBb,OAAjB,EAA0BW,MAA1B,CAAT;AACD;;AAED,YAAIG,IAAI,KAAK,MAAT,IAAmBd,OAAO,CAACO,SAA/B,EAA0C;AACxCX,UAAAA,SAAS,CAACiB,IAAD,EAAO,UAAP,EAAmBb,OAAnB,EAA4BW,MAA5B,CAAT;AACD;AACF,OAbD;AAcD;;AAjBI,GAAP;AAmBD;;AAEDb,aAAa,CAACiB,OAAd,GAAwB,IAAxB;AAEAC,MAAM,CAACC,OAAP,GAAiBnB,aAAjB","sourcesContent":["'use strict';\nconst transform = require('./lib/transform.js');\n\n/**\n * @typedef {{precision?: number | false,\n *          preserve?: boolean,\n *          warnWhenCannotResolve?: boolean,\n *          mediaQueries?: boolean,\n *          selectors?: boolean}} PostCssCalcOptions\n */\n/**\n * @type {import('postcss').PluginCreator<PostCssCalcOptions>}\n * @param {PostCssCalcOptions} opts\n * @return {import('postcss').Plugin}\n */\nfunction pluginCreator(opts) {\n  const options = Object.assign(\n    {\n      precision: 5,\n      preserve: false,\n      warnWhenCannotResolve: false,\n      mediaQueries: false,\n      selectors: false,\n    },\n    opts\n  );\n\n  return {\n    postcssPlugin: 'postcss-calc',\n    OnceExit(css, { result }) {\n      css.walk((node) => {\n        const { type } = node;\n        if (type === 'decl') {\n          transform(node, 'value', options, result);\n        }\n\n        if (type === 'atrule' && options.mediaQueries) {\n          transform(node, 'params', options, result);\n        }\n\n        if (type === 'rule' && options.selectors) {\n          transform(node, 'selector', options, result);\n        }\n      });\n    },\n  };\n}\n\npluginCreator.postcss = true;\n\nmodule.exports = pluginCreator;\n"]},"metadata":{},"sourceType":"script"}