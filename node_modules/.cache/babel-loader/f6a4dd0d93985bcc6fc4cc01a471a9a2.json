{"ast":null,"code":"'use strict';\n\nconst parser = require('postcss-selector-parser');\n\nconst canUnquote = require('./lib/canUnquote.js');\n\nconst pseudoElements = new Set(['::before', '::after', '::first-letter', '::first-line']);\n\nfunction attribute(selector) {\n  if (selector.value) {\n    if (selector.raws.value) {\n      // Join selectors that are split over new lines\n      selector.raws.value = selector.raws.value.replace(/\\\\\\n/g, '').trim();\n    }\n\n    if (canUnquote(selector.value)) {\n      selector.quoteMark = null;\n    }\n\n    if (selector.operator) {\n      selector.operator = selector.operator.trim();\n    }\n  }\n\n  selector.rawSpaceBefore = '';\n  selector.rawSpaceAfter = '';\n  selector.spaces.attribute = {\n    before: '',\n    after: ''\n  };\n  selector.spaces.operator = {\n    before: '',\n    after: ''\n  };\n  selector.spaces.value = {\n    before: '',\n    after: selector.insensitive ? ' ' : ''\n  };\n  selector.raws.spaces.attribute = {\n    before: '',\n    after: ''\n  };\n  selector.raws.spaces.operator = {\n    before: '',\n    after: ''\n  };\n  selector.raws.spaces.value = {\n    before: '',\n    after: selector.insensitive ? ' ' : ''\n  };\n\n  if (selector.insensitive) {\n    selector.raws.spaces.insensitive = {\n      before: '',\n      after: ''\n    };\n  }\n\n  selector.attribute = selector.attribute.trim();\n}\n\nfunction combinator(selector) {\n  const value = selector.value.trim();\n  selector.spaces.before = '';\n  selector.spaces.after = '';\n  selector.rawSpaceBefore = '';\n  selector.rawSpaceAfter = '';\n  selector.value = value.length ? value : ' ';\n}\n\nconst pseudoReplacements = new Map([[':nth-child', ':first-child'], [':nth-of-type', ':first-of-type'], [':nth-last-child', ':last-child'], [':nth-last-of-type', ':last-of-type']]);\n\nfunction pseudo(selector) {\n  const value = selector.value.toLowerCase();\n\n  if (selector.nodes.length === 1 && pseudoReplacements.has(value)) {\n    const first = selector.at(0);\n    const one = first.at(0);\n\n    if (first.length === 1) {\n      if (one.value === '1') {\n        selector.replaceWith(parser.pseudo({\n          value: pseudoReplacements.get(value)\n        }));\n      }\n\n      if (one.value.toLowerCase() === 'even') {\n        one.value = '2n';\n      }\n    }\n\n    if (first.length === 3) {\n      const two = first.at(1);\n      const three = first.at(2);\n\n      if (one.value.toLowerCase() === '2n' && two.value === '+' && three.value === '1') {\n        one.value = 'odd';\n        two.remove();\n        three.remove();\n      }\n    }\n\n    return;\n  }\n\n  const uniques = new Set();\n  selector.walk(child => {\n    if (child.type === 'selector') {\n      const childStr = String(child);\n\n      if (!uniques.has(childStr)) {\n        uniques.add(childStr);\n      } else {\n        child.remove();\n      }\n    }\n  });\n\n  if (pseudoElements.has(value)) {\n    selector.value = selector.value.slice(1);\n  }\n}\n\nconst tagReplacements = new Map([['from', '0%'], ['100%', 'to']]);\n\nfunction tag(selector) {\n  const value = selector.value.toLowerCase();\n\n  if (tagReplacements.has(value)) {\n    selector.value = tagReplacements.get(value);\n  }\n}\n\nfunction universal(selector) {\n  const next = selector.next();\n\n  if (next && next.type !== 'combinator') {\n    selector.remove();\n  }\n}\n\nconst reducers = new Map([['attribute', attribute], ['combinator', combinator], ['pseudo', pseudo], ['tag', tag], ['universal', universal]]);\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-minify-selectors',\n\n    OnceExit(css) {\n      const cache = new Map();\n      const processor = parser(selectors => {\n        const uniqueSelectors = new Set();\n        selectors.walk(sel => {\n          // Trim whitespace around the value\n          sel.spaces.before = sel.spaces.after = '';\n          const reducer = reducers.get(sel.type);\n\n          if (reducer !== undefined) {\n            reducer(sel);\n            return;\n          }\n\n          const toString = String(sel);\n\n          if (sel.type === 'selector' && sel.parent.type !== 'pseudo') {\n            if (!uniqueSelectors.has(toString)) {\n              uniqueSelectors.add(toString);\n            } else {\n              sel.remove();\n            }\n          }\n        });\n        selectors.nodes.sort();\n      });\n      css.walkRules(rule => {\n        const selector = rule.raws.selector && rule.raws.selector.value === rule.selector ? rule.raws.selector.raw : rule.selector; // If the selector ends with a ':' it is likely a part of a custom mixin,\n        // so just pass through.\n\n        if (selector[selector.length - 1] === ':') {\n          return;\n        }\n\n        if (cache.has(selector)) {\n          rule.selector = cache.get(selector);\n          return;\n        }\n\n        const optimizedSelector = processor.processSync(selector);\n        rule.selector = optimizedSelector;\n        cache.set(selector, optimizedSelector);\n      });\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-minify-selectors/src/index.js"],"names":["parser","require","canUnquote","pseudoElements","Set","attribute","selector","value","raws","replace","trim","quoteMark","operator","rawSpaceBefore","rawSpaceAfter","spaces","before","after","insensitive","combinator","length","pseudoReplacements","Map","pseudo","toLowerCase","nodes","has","first","at","one","replaceWith","get","two","three","remove","uniques","walk","child","type","childStr","String","add","slice","tagReplacements","tag","universal","next","reducers","pluginCreator","postcssPlugin","OnceExit","css","cache","processor","selectors","uniqueSelectors","sel","reducer","undefined","toString","parent","sort","walkRules","rule","raw","optimizedSelector","processSync","set","postcss","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst parser = require('postcss-selector-parser');\nconst canUnquote = require('./lib/canUnquote.js');\n\nconst pseudoElements = new Set([\n  '::before',\n  '::after',\n  '::first-letter',\n  '::first-line',\n]);\n\nfunction attribute(selector) {\n  if (selector.value) {\n    if (selector.raws.value) {\n      // Join selectors that are split over new lines\n      selector.raws.value = selector.raws.value.replace(/\\\\\\n/g, '').trim();\n    }\n    if (canUnquote(selector.value)) {\n      selector.quoteMark = null;\n    }\n\n    if (selector.operator) {\n      selector.operator = selector.operator.trim();\n    }\n  }\n\n  selector.rawSpaceBefore = '';\n  selector.rawSpaceAfter = '';\n  selector.spaces.attribute = { before: '', after: '' };\n  selector.spaces.operator = { before: '', after: '' };\n  selector.spaces.value = {\n    before: '',\n    after: selector.insensitive ? ' ' : '',\n  };\n\n  selector.raws.spaces.attribute = {\n    before: '',\n    after: '',\n  };\n\n  selector.raws.spaces.operator = {\n    before: '',\n    after: '',\n  };\n\n  selector.raws.spaces.value = {\n    before: '',\n    after: selector.insensitive ? ' ' : '',\n  };\n\n  if (selector.insensitive) {\n    selector.raws.spaces.insensitive = {\n      before: '',\n      after: '',\n    };\n  }\n\n  selector.attribute = selector.attribute.trim();\n}\n\nfunction combinator(selector) {\n  const value = selector.value.trim();\n  selector.spaces.before = '';\n  selector.spaces.after = '';\n  selector.rawSpaceBefore = '';\n  selector.rawSpaceAfter = '';\n  selector.value = value.length ? value : ' ';\n}\n\nconst pseudoReplacements = new Map([\n  [':nth-child', ':first-child'],\n  [':nth-of-type', ':first-of-type'],\n  [':nth-last-child', ':last-child'],\n  [':nth-last-of-type', ':last-of-type'],\n]);\n\nfunction pseudo(selector) {\n  const value = selector.value.toLowerCase();\n\n  if (selector.nodes.length === 1 && pseudoReplacements.has(value)) {\n    const first = selector.at(0);\n    const one = first.at(0);\n\n    if (first.length === 1) {\n      if (one.value === '1') {\n        selector.replaceWith(\n          parser.pseudo({\n            value: pseudoReplacements.get(value),\n          })\n        );\n      }\n\n      if (one.value.toLowerCase() === 'even') {\n        one.value = '2n';\n      }\n    }\n\n    if (first.length === 3) {\n      const two = first.at(1);\n      const three = first.at(2);\n\n      if (\n        one.value.toLowerCase() === '2n' &&\n        two.value === '+' &&\n        three.value === '1'\n      ) {\n        one.value = 'odd';\n\n        two.remove();\n        three.remove();\n      }\n    }\n\n    return;\n  }\n\n  const uniques = new Set();\n\n  selector.walk((child) => {\n    if (child.type === 'selector') {\n      const childStr = String(child);\n\n      if (!uniques.has(childStr)) {\n        uniques.add(childStr);\n      } else {\n        child.remove();\n      }\n    }\n  });\n\n  if (pseudoElements.has(value)) {\n    selector.value = selector.value.slice(1);\n  }\n}\n\nconst tagReplacements = new Map([\n  ['from', '0%'],\n  ['100%', 'to'],\n]);\n\nfunction tag(selector) {\n  const value = selector.value.toLowerCase();\n\n  if (tagReplacements.has(value)) {\n    selector.value = tagReplacements.get(value);\n  }\n}\n\nfunction universal(selector) {\n  const next = selector.next();\n\n  if (next && next.type !== 'combinator') {\n    selector.remove();\n  }\n}\n\nconst reducers = new Map([\n  ['attribute', attribute],\n  ['combinator', combinator],\n  ['pseudo', pseudo],\n  ['tag', tag],\n  ['universal', universal],\n]);\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-minify-selectors',\n\n    OnceExit(css) {\n      const cache = new Map();\n      const processor = parser((selectors) => {\n        const uniqueSelectors = new Set();\n\n        selectors.walk((sel) => {\n          // Trim whitespace around the value\n          sel.spaces.before = sel.spaces.after = '';\n          const reducer = reducers.get(sel.type);\n          if (reducer !== undefined) {\n            reducer(sel);\n            return;\n          }\n\n          const toString = String(sel);\n\n          if (sel.type === 'selector' && sel.parent.type !== 'pseudo') {\n            if (!uniqueSelectors.has(toString)) {\n              uniqueSelectors.add(toString);\n            } else {\n              sel.remove();\n            }\n          }\n        });\n        selectors.nodes.sort();\n      });\n\n      css.walkRules((rule) => {\n        const selector =\n          rule.raws.selector && rule.raws.selector.value === rule.selector\n            ? rule.raws.selector.raw\n            : rule.selector;\n\n        // If the selector ends with a ':' it is likely a part of a custom mixin,\n        // so just pass through.\n        if (selector[selector.length - 1] === ':') {\n          return;\n        }\n\n        if (cache.has(selector)) {\n          rule.selector = cache.get(selector);\n\n          return;\n        }\n\n        const optimizedSelector = processor.processSync(selector);\n\n        rule.selector = optimizedSelector;\n        cache.set(selector, optimizedSelector);\n      });\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"]},"metadata":{},"sourceType":"script"}