{"ast":null,"code":"'use strict';\n\nmodule.exports = function insertCloned(rule, decl, props) {\n  const newNode = Object.assign(decl.clone(), props);\n  rule.insertAfter(decl, newNode);\n  return newNode;\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-merge-longhand/src/lib/insertCloned.js"],"names":["module","exports","insertCloned","rule","decl","props","newNode","Object","assign","clone","insertAfter"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AACxD,QAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcJ,IAAI,CAACK,KAAL,EAAd,EAA4BJ,KAA5B,CAAhB;AAEAF,EAAAA,IAAI,CAACO,WAAL,CAAiBN,IAAjB,EAAuBE,OAAvB;AAEA,SAAOA,OAAP;AACD,CAND","sourcesContent":["'use strict';\nmodule.exports = function insertCloned(rule, decl, props) {\n  const newNode = Object.assign(decl.clone(), props);\n\n  rule.insertAfter(decl, newNode);\n\n  return newNode;\n};\n"]},"metadata":{},"sourceType":"script"}