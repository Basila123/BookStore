{"ast":null,"code":"'use strict';\n\nconst {\n  visit\n} = require('../xast.js');\n/**\n * Plugins engine.\n *\n * @module plugins\n *\n * @param {Object} ast input ast\n * @param {Object} info extra information\n * @param {Array} plugins plugins object from config\n * @return {Object} output ast\n */\n\n\nconst invokePlugins = (ast, info, plugins, overrides, globalOverrides) => {\n  for (const plugin of plugins) {\n    const override = overrides == null ? null : overrides[plugin.name];\n\n    if (override === false) {\n      continue;\n    }\n\n    const params = { ...plugin.params,\n      ...globalOverrides,\n      ...override\n    };\n\n    if (plugin.type === 'perItem') {\n      ast = perItem(ast, info, plugin, params);\n    }\n\n    if (plugin.type === 'perItemReverse') {\n      ast = perItem(ast, info, plugin, params, true);\n    }\n\n    if (plugin.type === 'full') {\n      if (plugin.active) {\n        ast = plugin.fn(ast, params, info);\n      }\n    }\n\n    if (plugin.type === 'visitor') {\n      if (plugin.active) {\n        const visitor = plugin.fn(ast, params, info);\n\n        if (visitor != null) {\n          visit(ast, visitor);\n        }\n      }\n    }\n  }\n\n  return ast;\n};\n\nexports.invokePlugins = invokePlugins;\n/**\n * Direct or reverse per-item loop.\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Array} plugins plugins list to process\n * @param {boolean} [reverse] reverse pass?\n * @return {Object} output data\n */\n\nfunction perItem(data, info, plugin, params, reverse) {\n  function monkeys(items) {\n    items.children = items.children.filter(function (item) {\n      // reverse pass\n      if (reverse && item.children) {\n        monkeys(item);\n      } // main filter\n\n\n      let kept = true;\n\n      if (plugin.active) {\n        kept = plugin.fn(item, params, info) !== false;\n      } // direct pass\n\n\n      if (!reverse && item.children) {\n        monkeys(item);\n      }\n\n      return kept;\n    });\n    return items;\n  }\n\n  return monkeys(data);\n}\n\nconst createPreset = _ref => {\n  let {\n    name,\n    plugins\n  } = _ref;\n  return {\n    name,\n    type: 'full',\n    fn: (ast, params, info) => {\n      const {\n        floatPrecision,\n        overrides\n      } = params;\n      const globalOverrides = {};\n\n      if (floatPrecision != null) {\n        globalOverrides.floatPrecision = floatPrecision;\n      }\n\n      if (overrides) {\n        for (const [pluginName, override] of Object.entries(overrides)) {\n          if (override === true) {\n            console.warn(`You are trying to enable ${pluginName} which is not part of preset.\\n` + `Try to put it before or after preset, for example\\n\\n` + `plugins: [\\n` + `  {\\n` + `    name: 'preset-default',\\n` + `  },\\n` + `  'cleanupListOfValues'\\n` + `]\\n`);\n          }\n        }\n      }\n\n      return invokePlugins(ast, info, plugins, overrides, globalOverrides);\n    }\n  };\n};\n\nexports.createPreset = createPreset;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-svgo/node_modules/svgo/lib/svgo/plugins.js"],"names":["visit","require","invokePlugins","ast","info","plugins","overrides","globalOverrides","plugin","override","name","params","type","perItem","active","fn","visitor","exports","data","reverse","monkeys","items","children","filter","item","kept","createPreset","floatPrecision","pluginName","Object","entries","console","warn"],"mappings":"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","sourcesContent":["'use strict';\n\nconst { visit } = require('../xast.js');\n\n/**\n * Plugins engine.\n *\n * @module plugins\n *\n * @param {Object} ast input ast\n * @param {Object} info extra information\n * @param {Array} plugins plugins object from config\n * @return {Object} output ast\n */\nconst invokePlugins = (ast, info, plugins, overrides, globalOverrides) => {\n  for (const plugin of plugins) {\n    const override = overrides == null ? null : overrides[plugin.name];\n    if (override === false) {\n      continue;\n    }\n    const params = { ...plugin.params, ...globalOverrides, ...override };\n\n    if (plugin.type === 'perItem') {\n      ast = perItem(ast, info, plugin, params);\n    }\n    if (plugin.type === 'perItemReverse') {\n      ast = perItem(ast, info, plugin, params, true);\n    }\n    if (plugin.type === 'full') {\n      if (plugin.active) {\n        ast = plugin.fn(ast, params, info);\n      }\n    }\n    if (plugin.type === 'visitor') {\n      if (plugin.active) {\n        const visitor = plugin.fn(ast, params, info);\n        if (visitor != null) {\n          visit(ast, visitor);\n        }\n      }\n    }\n  }\n  return ast;\n};\nexports.invokePlugins = invokePlugins;\n\n/**\n * Direct or reverse per-item loop.\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Array} plugins plugins list to process\n * @param {boolean} [reverse] reverse pass?\n * @return {Object} output data\n */\nfunction perItem(data, info, plugin, params, reverse) {\n  function monkeys(items) {\n    items.children = items.children.filter(function (item) {\n      // reverse pass\n      if (reverse && item.children) {\n        monkeys(item);\n      }\n      // main filter\n      let kept = true;\n      if (plugin.active) {\n        kept = plugin.fn(item, params, info) !== false;\n      }\n      // direct pass\n      if (!reverse && item.children) {\n        monkeys(item);\n      }\n      return kept;\n    });\n    return items;\n  }\n  return monkeys(data);\n}\n\nconst createPreset = ({ name, plugins }) => {\n  return {\n    name,\n    type: 'full',\n    fn: (ast, params, info) => {\n      const { floatPrecision, overrides } = params;\n      const globalOverrides = {};\n      if (floatPrecision != null) {\n        globalOverrides.floatPrecision = floatPrecision;\n      }\n      if (overrides) {\n        for (const [pluginName, override] of Object.entries(overrides)) {\n          if (override === true) {\n            console.warn(\n              `You are trying to enable ${pluginName} which is not part of preset.\\n` +\n                `Try to put it before or after preset, for example\\n\\n` +\n                `plugins: [\\n` +\n                `  {\\n` +\n                `    name: 'preset-default',\\n` +\n                `  },\\n` +\n                `  'cleanupListOfValues'\\n` +\n                `]\\n`\n            );\n          }\n        }\n      }\n      return invokePlugins(ast, info, plugins, overrides, globalOverrides);\n    },\n  };\n};\nexports.createPreset = createPreset;\n"]},"metadata":{},"sourceType":"script"}