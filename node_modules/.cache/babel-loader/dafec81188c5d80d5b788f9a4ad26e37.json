{"ast":null,"code":"'use strict';\n\nconst selectorParser = require('postcss-selector-parser');\n\nfunction parseSelectors(selectors, callback) {\n  return selectorParser(callback).processSync(selectors);\n}\n\nfunction unique(rule) {\n  const selector = [...new Set(rule.selectors)];\n  selector.sort();\n  rule.selector = selector.join();\n}\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-unique-selectors',\n\n    OnceExit(css) {\n      css.walkRules(nodes => {\n        let comments = [];\n        nodes.selector = parseSelectors(nodes.selector, selNode => {\n          selNode.walk(sel => {\n            if (sel.type === 'comment') {\n              comments.push(sel.value);\n              sel.remove();\n              return;\n            } else {\n              return;\n            }\n          });\n        });\n        unique(nodes);\n        nodes.selectors = nodes.selectors.concat(comments);\n      });\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-unique-selectors/src/index.js"],"names":["selectorParser","require","parseSelectors","selectors","callback","processSync","unique","rule","selector","Set","sort","join","pluginCreator","postcssPlugin","OnceExit","css","walkRules","nodes","comments","selNode","walk","sel","type","push","value","remove","concat","postcss","module","exports"],"mappings":"AAAA;;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,yBAAD,CAA9B;;AAEA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,QAAnC,EAA6C;AAC3C,SAAOJ,cAAc,CAACI,QAAD,CAAd,CAAyBC,WAAzB,CAAqCF,SAArC,CAAP;AACD;;AAED,SAASG,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,QAAMC,QAAQ,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQF,IAAI,CAACJ,SAAb,CAAJ,CAAjB;AACAK,EAAAA,QAAQ,CAACE,IAAT;AACAH,EAAAA,IAAI,CAACC,QAAL,GAAgBA,QAAQ,CAACG,IAAT,EAAhB;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,SAAO;AACLC,IAAAA,aAAa,EAAE,0BADV;;AAELC,IAAAA,QAAQ,CAACC,GAAD,EAAM;AACZA,MAAAA,GAAG,CAACC,SAAJ,CAAeC,KAAD,IAAW;AACvB,YAAIC,QAAQ,GAAG,EAAf;AACAD,QAAAA,KAAK,CAACT,QAAN,GAAiBN,cAAc,CAACe,KAAK,CAACT,QAAP,EAAkBW,OAAD,IAAa;AAC3DA,UAAAA,OAAO,CAACC,IAAR,CAAcC,GAAD,IAAS;AACpB,gBAAIA,GAAG,CAACC,IAAJ,KAAa,SAAjB,EAA4B;AAC1BJ,cAAAA,QAAQ,CAACK,IAAT,CAAcF,GAAG,CAACG,KAAlB;AACAH,cAAAA,GAAG,CAACI,MAAJ;AACA;AACD,aAJD,MAIO;AACL;AACD;AACF,WARD;AASD,SAV8B,CAA/B;AAWAnB,QAAAA,MAAM,CAACW,KAAD,CAAN;AACAA,QAAAA,KAAK,CAACd,SAAN,GAAkBc,KAAK,CAACd,SAAN,CAAgBuB,MAAhB,CAAuBR,QAAvB,CAAlB;AACD,OAfD;AAgBD;;AAnBI,GAAP;AAqBD;;AAEDN,aAAa,CAACe,OAAd,GAAwB,IAAxB;AACAC,MAAM,CAACC,OAAP,GAAiBjB,aAAjB","sourcesContent":["'use strict';\nconst selectorParser = require('postcss-selector-parser');\n\nfunction parseSelectors(selectors, callback) {\n  return selectorParser(callback).processSync(selectors);\n}\n\nfunction unique(rule) {\n  const selector = [...new Set(rule.selectors)];\n  selector.sort();\n  rule.selector = selector.join();\n}\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-unique-selectors',\n    OnceExit(css) {\n      css.walkRules((nodes) => {\n        let comments = [];\n        nodes.selector = parseSelectors(nodes.selector, (selNode) => {\n          selNode.walk((sel) => {\n            if (sel.type === 'comment') {\n              comments.push(sel.value);\n              sel.remove();\n              return;\n            } else {\n              return;\n            }\n          });\n        });\n        unique(nodes);\n        nodes.selectors = nodes.selectors.concat(comments);\n      });\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"]},"metadata":{},"sourceType":"script"}