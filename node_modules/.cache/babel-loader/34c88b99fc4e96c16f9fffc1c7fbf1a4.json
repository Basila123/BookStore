{"ast":null,"code":"var plugin = {\n  level1: {\n    value: function precision(_name, value, options) {\n      if (!options.precision.enabled || value.indexOf('.') === -1) {\n        return value;\n      }\n\n      return value.replace(options.precision.decimalPointMatcher, '$1$2$3').replace(options.precision.zeroMatcher, function (match, integerPart, fractionPart, unit) {\n        var multiplier = options.precision.units[unit].multiplier;\n        var parsedInteger = parseInt(integerPart);\n        var integer = isNaN(parsedInteger) ? 0 : parsedInteger;\n        var fraction = parseFloat(fractionPart);\n        return Math.round((integer + fraction) * multiplier) / multiplier + unit;\n      });\n    }\n  }\n};\nmodule.exports = plugin;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/clean-css/lib/optimizer/level-1/value-optimizers/precision.js"],"names":["plugin","level1","value","precision","_name","options","enabled","indexOf","replace","decimalPointMatcher","zeroMatcher","match","integerPart","fractionPart","unit","multiplier","units","parsedInteger","parseInt","integer","isNaN","fraction","parseFloat","Math","round","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,SAASC,SAAT,CAAmBC,KAAnB,EAA0BF,KAA1B,EAAiCG,OAAjC,EAA0C;AAC/C,UAAI,CAACA,OAAO,CAACF,SAAR,CAAkBG,OAAnB,IAA8BJ,KAAK,CAACK,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA1D,EAA6D;AAC3D,eAAOL,KAAP;AACD;;AAED,aAAOA,KAAK,CACTM,OADI,CACIH,OAAO,CAACF,SAAR,CAAkBM,mBADtB,EAC2C,QAD3C,EAEJD,OAFI,CAEIH,OAAO,CAACF,SAAR,CAAkBO,WAFtB,EAEmC,UAAUC,KAAV,EAAiBC,WAAjB,EAA8BC,YAA9B,EAA4CC,IAA5C,EAAkD;AACxF,YAAIC,UAAU,GAAGV,OAAO,CAACF,SAAR,CAAkBa,KAAlB,CAAwBF,IAAxB,EAA8BC,UAA/C;AACA,YAAIE,aAAa,GAAGC,QAAQ,CAACN,WAAD,CAA5B;AACA,YAAIO,OAAO,GAAGC,KAAK,CAACH,aAAD,CAAL,GAAuB,CAAvB,GAA2BA,aAAzC;AACA,YAAII,QAAQ,GAAGC,UAAU,CAACT,YAAD,CAAzB;AAEA,eAAOU,IAAI,CAACC,KAAL,CAAW,CAACL,OAAO,GAAGE,QAAX,IAAuBN,UAAlC,IAAgDA,UAAhD,GAA6DD,IAApE;AACD,OATI,CAAP;AAUD;AAhBK;AADG,CAAb;AAqBAW,MAAM,CAACC,OAAP,GAAiB1B,MAAjB","sourcesContent":["var plugin = {\n  level1: {\n    value: function precision(_name, value, options) {\n      if (!options.precision.enabled || value.indexOf('.') === -1) {\n        return value;\n      }\n\n      return value\n        .replace(options.precision.decimalPointMatcher, '$1$2$3')\n        .replace(options.precision.zeroMatcher, function (match, integerPart, fractionPart, unit) {\n          var multiplier = options.precision.units[unit].multiplier;\n          var parsedInteger = parseInt(integerPart);\n          var integer = isNaN(parsedInteger) ? 0 : parsedInteger;\n          var fraction = parseFloat(fractionPart);\n\n          return Math.round((integer + fraction) * multiplier) / multiplier + unit;\n        });\n    }\n  }\n};\n\nmodule.exports = plugin;\n"]},"metadata":{},"sourceType":"script"}