{"ast":null,"code":"var Hack = require('./hack');\n\nvar Marker = require('../tokenizer/marker');\n\nvar Token = require('../tokenizer/token');\n\nvar Match = {\n  ASTERISK: '*',\n  BACKSLASH: '\\\\',\n  BANG: '!',\n  BANG_SUFFIX_PATTERN: /!\\w+$/,\n  IMPORTANT_TOKEN: '!important',\n  IMPORTANT_TOKEN_PATTERN: new RegExp('!important$', 'i'),\n  IMPORTANT_WORD: 'important',\n  IMPORTANT_WORD_PATTERN: new RegExp('important$', 'i'),\n  SUFFIX_BANG_PATTERN: /!$/,\n  UNDERSCORE: '_',\n  VARIABLE_REFERENCE_PATTERN: /var\\(--.+\\)$/\n};\n\nfunction wrapAll(properties, skipProperties) {\n  var wrapped = [];\n  var single;\n  var property;\n  var i;\n\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n\n    if (property[0] != Token.PROPERTY) {\n      continue;\n    }\n\n    if (skipProperties && skipProperties.indexOf(property[1][1]) > -1) {\n      continue;\n    }\n\n    single = wrapSingle(property);\n    single.all = properties;\n    single.position = i;\n    wrapped.unshift(single);\n  }\n\n  return wrapped;\n}\n\nfunction someVariableReferences(property) {\n  var i, l;\n  var value; // skipping `property` and property name tokens\n\n  for (i = 2, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] != Token.PROPERTY_VALUE) {\n      continue;\n    }\n\n    if (isVariableReference(value[1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableReference(value) {\n  return Match.VARIABLE_REFERENCE_PATTERN.test(value);\n}\n\nfunction isMultiplex(property) {\n  var value;\n  var i, l;\n\n  for (i = 3, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] == Token.PROPERTY_VALUE && (value[1] == Marker.COMMA || value[1] == Marker.FORWARD_SLASH)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction hackFrom(property) {\n  var match = false;\n  var name = property[1][1];\n  var lastValue = property[property.length - 1];\n\n  if (name[0] == Match.UNDERSCORE) {\n    match = [Hack.UNDERSCORE];\n  } else if (name[0] == Match.ASTERISK) {\n    match = [Hack.ASTERISK];\n  } else if (lastValue[1][0] == Match.BANG && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BANG) > 0 && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN) && Match.BANG_SUFFIX_PATTERN.test(lastValue[1])) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) > 0 && lastValue[1].indexOf(Match.BACKSLASH) == lastValue[1].length - Match.BACKSLASH.length - 1) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(lastValue[1].indexOf(Match.BACKSLASH) + 1)];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) === 0 && lastValue[1].length == 2) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(1)];\n  }\n\n  return match;\n}\n\nfunction isImportant(property) {\n  if (property.length < 3) return false;\n  var lastValue = property[property.length - 1];\n\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    return true;\n  } else if (Match.IMPORTANT_WORD_PATTERN.test(lastValue[1]) && Match.SUFFIX_BANG_PATTERN.test(property[property.length - 2][1])) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction stripImportant(property) {\n  var lastValue = property[property.length - 1];\n  var oneButLastValue = property[property.length - 2];\n\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_TOKEN_PATTERN, '');\n  } else {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_WORD_PATTERN, '');\n    oneButLastValue[1] = oneButLastValue[1].replace(Match.SUFFIX_BANG_PATTERN, '');\n  }\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n\n  if (oneButLastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction stripPrefixHack(property) {\n  property[1][1] = property[1][1].substring(1);\n}\n\nfunction stripSuffixHack(property, hackFrom) {\n  var lastValue = property[property.length - 1];\n  lastValue[1] = lastValue[1].substring(0, lastValue[1].indexOf(hackFrom[0] == Hack.BACKSLASH ? Match.BACKSLASH : Match.BANG)).trim();\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction wrapSingle(property) {\n  var importantProperty = isImportant(property);\n\n  if (importantProperty) {\n    stripImportant(property);\n  }\n\n  var whichHack = hackFrom(property);\n\n  if (whichHack[0] == Hack.ASTERISK || whichHack[0] == Hack.UNDERSCORE) {\n    stripPrefixHack(property);\n  } else if (whichHack[0] == Hack.BACKSLASH || whichHack[0] == Hack.BANG) {\n    stripSuffixHack(property, whichHack);\n  }\n\n  return {\n    block: property[2] && property[2][0] == Token.PROPERTY_BLOCK,\n    components: [],\n    dirty: false,\n    dynamic: someVariableReferences(property),\n    hack: whichHack,\n    important: importantProperty,\n    name: property[1][1],\n    multiplex: property.length > 3 ? isMultiplex(property) : false,\n    optimizable: true,\n    position: 0,\n    shorthand: false,\n    unused: false,\n    value: property.slice(2)\n  };\n}\n\nmodule.exports = {\n  all: wrapAll,\n  single: wrapSingle\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/clean-css/lib/optimizer/wrap-for-optimizing.js"],"names":["Hack","require","Marker","Token","Match","ASTERISK","BACKSLASH","BANG","BANG_SUFFIX_PATTERN","IMPORTANT_TOKEN","IMPORTANT_TOKEN_PATTERN","RegExp","IMPORTANT_WORD","IMPORTANT_WORD_PATTERN","SUFFIX_BANG_PATTERN","UNDERSCORE","VARIABLE_REFERENCE_PATTERN","wrapAll","properties","skipProperties","wrapped","single","property","i","length","PROPERTY","indexOf","wrapSingle","all","position","unshift","someVariableReferences","l","value","PROPERTY_VALUE","isVariableReference","test","isMultiplex","COMMA","FORWARD_SLASH","hackFrom","match","name","lastValue","substring","isImportant","stripImportant","oneButLastValue","replace","pop","stripPrefixHack","stripSuffixHack","trim","importantProperty","whichHack","block","PROPERTY_BLOCK","components","dirty","dynamic","hack","important","multiplex","optimizable","shorthand","unused","slice","module","exports"],"mappings":"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","sourcesContent":["var Hack = require('./hack');\n\nvar Marker = require('../tokenizer/marker');\nvar Token = require('../tokenizer/token');\n\nvar Match = {\n  ASTERISK: '*',\n  BACKSLASH: '\\\\',\n  BANG: '!',\n  BANG_SUFFIX_PATTERN: /!\\w+$/,\n  IMPORTANT_TOKEN: '!important',\n  IMPORTANT_TOKEN_PATTERN: new RegExp('!important$', 'i'),\n  IMPORTANT_WORD: 'important',\n  IMPORTANT_WORD_PATTERN: new RegExp('important$', 'i'),\n  SUFFIX_BANG_PATTERN: /!$/,\n  UNDERSCORE: '_',\n  VARIABLE_REFERENCE_PATTERN: /var\\(--.+\\)$/\n};\n\nfunction wrapAll(properties, skipProperties) {\n  var wrapped = [];\n  var single;\n  var property;\n  var i;\n\n  for (i = properties.length - 1; i >= 0; i--) {\n    property = properties[i];\n\n    if (property[0] != Token.PROPERTY) {\n      continue;\n    }\n\n    if (skipProperties && skipProperties.indexOf(property[1][1]) > -1) {\n      continue;\n    }\n\n    single = wrapSingle(property);\n    single.all = properties;\n    single.position = i;\n    wrapped.unshift(single);\n  }\n\n  return wrapped;\n}\n\nfunction someVariableReferences(property) {\n  var i, l;\n  var value;\n\n  // skipping `property` and property name tokens\n  for (i = 2, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] != Token.PROPERTY_VALUE) {\n      continue;\n    }\n\n    if (isVariableReference(value[1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isVariableReference(value) {\n  return Match.VARIABLE_REFERENCE_PATTERN.test(value);\n}\n\nfunction isMultiplex(property) {\n  var value;\n  var i, l;\n\n  for (i = 3, l = property.length; i < l; i++) {\n    value = property[i];\n\n    if (value[0] == Token.PROPERTY_VALUE && (value[1] == Marker.COMMA || value[1] == Marker.FORWARD_SLASH)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction hackFrom(property) {\n  var match = false;\n  var name = property[1][1];\n  var lastValue = property[property.length - 1];\n\n  if (name[0] == Match.UNDERSCORE) {\n    match = [Hack.UNDERSCORE];\n  } else if (name[0] == Match.ASTERISK) {\n    match = [Hack.ASTERISK];\n  } else if (lastValue[1][0] == Match.BANG && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN)) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BANG) > 0 && !lastValue[1].match(Match.IMPORTANT_WORD_PATTERN) && Match.BANG_SUFFIX_PATTERN.test(lastValue[1])) {\n    match = [Hack.BANG];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) > 0 && lastValue[1].indexOf(Match.BACKSLASH) == lastValue[1].length - Match.BACKSLASH.length - 1) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(lastValue[1].indexOf(Match.BACKSLASH) + 1)];\n  } else if (lastValue[1].indexOf(Match.BACKSLASH) === 0 && lastValue[1].length == 2) {\n    match = [Hack.BACKSLASH, lastValue[1].substring(1)];\n  }\n\n  return match;\n}\n\nfunction isImportant(property) {\n  if (property.length < 3)\n    return false;\n\n  var lastValue = property[property.length - 1];\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    return true;\n  } else if (Match.IMPORTANT_WORD_PATTERN.test(lastValue[1]) && Match.SUFFIX_BANG_PATTERN.test(property[property.length - 2][1])) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction stripImportant(property) {\n  var lastValue = property[property.length - 1];\n  var oneButLastValue = property[property.length - 2];\n\n  if (Match.IMPORTANT_TOKEN_PATTERN.test(lastValue[1])) {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_TOKEN_PATTERN, '');\n  } else {\n    lastValue[1] = lastValue[1].replace(Match.IMPORTANT_WORD_PATTERN, '');\n    oneButLastValue[1] = oneButLastValue[1].replace(Match.SUFFIX_BANG_PATTERN, '');\n  }\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n\n  if (oneButLastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction stripPrefixHack(property) {\n  property[1][1] = property[1][1].substring(1);\n}\n\nfunction stripSuffixHack(property, hackFrom) {\n  var lastValue = property[property.length - 1];\n  lastValue[1] = lastValue[1]\n    .substring(0, lastValue[1].indexOf(hackFrom[0] == Hack.BACKSLASH ? Match.BACKSLASH : Match.BANG))\n    .trim();\n\n  if (lastValue[1].length === 0) {\n    property.pop();\n  }\n}\n\nfunction wrapSingle(property) {\n  var importantProperty = isImportant(property);\n  if (importantProperty) {\n    stripImportant(property);\n  }\n\n  var whichHack = hackFrom(property);\n  if (whichHack[0] == Hack.ASTERISK || whichHack[0] == Hack.UNDERSCORE) {\n    stripPrefixHack(property);\n  } else if (whichHack[0] == Hack.BACKSLASH || whichHack[0] == Hack.BANG) {\n    stripSuffixHack(property, whichHack);\n  }\n\n  return {\n    block: property[2] && property[2][0] == Token.PROPERTY_BLOCK,\n    components: [],\n    dirty: false,\n    dynamic: someVariableReferences(property),\n    hack: whichHack,\n    important: importantProperty,\n    name: property[1][1],\n    multiplex: property.length > 3 ? isMultiplex(property) : false,\n    optimizable: true,\n    position: 0,\n    shorthand: false,\n    unused: false,\n    value: property.slice(2)\n  };\n}\n\nmodule.exports = {\n  all: wrapAll,\n  single: wrapSingle\n};\n"]},"metadata":{},"sourceType":"script"}