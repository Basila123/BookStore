{"ast":null,"code":"'use strict';\n\nconst {\n  unit\n} = require('postcss-value-parser');\n\nconst {\n  colord,\n  extend\n} = require('colord');\n\nconst namesPlugin = require('colord/plugins/names');\n\nextend([namesPlugin]);\n/* Code derived from https://github.com/pigcan/is-color-stop */\n\nconst lengthUnits = new Set(['PX', 'IN', 'CM', 'MM', 'EM', 'REM', 'POINTS', 'PC', 'EX', 'CH', 'VW', 'VH', 'VMIN', 'VMAX', '%']);\n\nfunction isCSSLengthUnit(input) {\n  return lengthUnits.has(input.toUpperCase());\n}\n\nfunction isStop(str) {\n  if (str) {\n    let stop = false;\n    const node = unit(str);\n\n    if (node) {\n      const number = Number(node.number);\n\n      if (number === 0 || !isNaN(number) && isCSSLengthUnit(node.unit)) {\n        stop = true;\n      }\n    } else {\n      stop = /^calc\\(\\S+\\)$/g.test(str);\n    }\n\n    return stop;\n  }\n\n  return true;\n}\n\nmodule.exports = function isColorStop(color, stop) {\n  return colord(color).isValid() && isStop(stop);\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-minify-gradients/src/isColorStop.js"],"names":["unit","require","colord","extend","namesPlugin","lengthUnits","Set","isCSSLengthUnit","input","has","toUpperCase","isStop","str","stop","node","number","Number","isNaN","test","module","exports","isColorStop","color","isValid"],"mappings":"AAAA;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAWC,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAqBF,OAAO,CAAC,QAAD,CAAlC;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,sBAAD,CAA3B;;AAEAE,MAAM,CAAC,CAACC,WAAD,CAAD,CAAN;AAEA;;AAEA,MAAMC,WAAW,GAAG,IAAIC,GAAJ,CAAQ,CAC1B,IAD0B,EAE1B,IAF0B,EAG1B,IAH0B,EAI1B,IAJ0B,EAK1B,IAL0B,EAM1B,KAN0B,EAO1B,QAP0B,EAQ1B,IAR0B,EAS1B,IAT0B,EAU1B,IAV0B,EAW1B,IAX0B,EAY1B,IAZ0B,EAa1B,MAb0B,EAc1B,MAd0B,EAe1B,GAf0B,CAAR,CAApB;;AAkBA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAOH,WAAW,CAACI,GAAZ,CAAgBD,KAAK,CAACE,WAAN,EAAhB,CAAP;AACD;;AAED,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,MAAIA,GAAJ,EAAS;AACP,QAAIC,IAAI,GAAG,KAAX;AACA,UAAMC,IAAI,GAAGd,IAAI,CAACY,GAAD,CAAjB;;AACA,QAAIE,IAAJ,EAAU;AACR,YAAMC,MAAM,GAAGC,MAAM,CAACF,IAAI,CAACC,MAAN,CAArB;;AACA,UAAIA,MAAM,KAAK,CAAX,IAAiB,CAACE,KAAK,CAACF,MAAD,CAAN,IAAkBR,eAAe,CAACO,IAAI,CAACd,IAAN,CAAtD,EAAoE;AAClEa,QAAAA,IAAI,GAAG,IAAP;AACD;AACF,KALD,MAKO;AACLA,MAAAA,IAAI,GAAG,iBAAiBK,IAAjB,CAAsBN,GAAtB,CAAP;AACD;;AACD,WAAOC,IAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,KAArB,EAA4BT,IAA5B,EAAkC;AACjD,SAAOX,MAAM,CAACoB,KAAD,CAAN,CAAcC,OAAd,MAA2BZ,MAAM,CAACE,IAAD,CAAxC;AACD,CAFD","sourcesContent":["'use strict';\nconst { unit } = require('postcss-value-parser');\nconst { colord, extend } = require('colord');\nconst namesPlugin = require('colord/plugins/names');\n\nextend([namesPlugin]);\n\n/* Code derived from https://github.com/pigcan/is-color-stop */\n\nconst lengthUnits = new Set([\n  'PX',\n  'IN',\n  'CM',\n  'MM',\n  'EM',\n  'REM',\n  'POINTS',\n  'PC',\n  'EX',\n  'CH',\n  'VW',\n  'VH',\n  'VMIN',\n  'VMAX',\n  '%',\n]);\n\nfunction isCSSLengthUnit(input) {\n  return lengthUnits.has(input.toUpperCase());\n}\n\nfunction isStop(str) {\n  if (str) {\n    let stop = false;\n    const node = unit(str);\n    if (node) {\n      const number = Number(node.number);\n      if (number === 0 || (!isNaN(number) && isCSSLengthUnit(node.unit))) {\n        stop = true;\n      }\n    } else {\n      stop = /^calc\\(\\S+\\)$/g.test(str);\n    }\n    return stop;\n  }\n  return true;\n}\n\nmodule.exports = function isColorStop(color, stop) {\n  return colord(color).isValid() && isStop(stop);\n};\n"]},"metadata":{},"sourceType":"script"}