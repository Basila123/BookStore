{"ast":null,"code":"var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar TIME_VALUE = /^(\\-?[\\d\\.]+)(m?s)$/;\nvar plugin = {\n  level1: {\n    value: function time(name, value, options) {\n      if (!options.level[OptimizationLevel.One].replaceTimeUnits) {\n        return value;\n      }\n\n      if (!TIME_VALUE.test(value)) {\n        return value;\n      }\n\n      return value.replace(TIME_VALUE, function (match, val, unit) {\n        var newValue;\n\n        if (unit == 'ms') {\n          newValue = parseInt(val) / 1000 + 's';\n        } else if (unit == 's') {\n          newValue = parseFloat(val) * 1000 + 'ms';\n        }\n\n        return newValue.length < match.length ? newValue : match;\n      });\n    }\n  }\n};\nmodule.exports = plugin;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/clean-css/lib/optimizer/level-1/value-optimizers/time.js"],"names":["OptimizationLevel","require","TIME_VALUE","plugin","level1","value","time","name","options","level","One","replaceTimeUnits","test","replace","match","val","unit","newValue","parseInt","parseFloat","length","module","exports"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qCAAD,CAAP,CAA+CD,iBAAvE;;AAEA,IAAIE,UAAU,GAAG,qBAAjB;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,SAASC,IAAT,CAAcC,IAAd,EAAoBF,KAApB,EAA2BG,OAA3B,EAAoC;AACzC,UAAI,CAACA,OAAO,CAACC,KAAR,CAAcT,iBAAiB,CAACU,GAAhC,EAAqCC,gBAA1C,EAA4D;AAC1D,eAAON,KAAP;AACD;;AAED,UAAI,CAACH,UAAU,CAACU,IAAX,CAAgBP,KAAhB,CAAL,EAA6B;AAC3B,eAAOA,KAAP;AACD;;AAED,aAAOA,KAAK,CAACQ,OAAN,CAAcX,UAAd,EAA0B,UAAUY,KAAV,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AAC3D,YAAIC,QAAJ;;AAEA,YAAID,IAAI,IAAI,IAAZ,EAAkB;AAChBC,UAAAA,QAAQ,GAAGC,QAAQ,CAACH,GAAD,CAAR,GAAgB,IAAhB,GAAuB,GAAlC;AACD,SAFD,MAEO,IAAIC,IAAI,IAAI,GAAZ,EAAiB;AACtBC,UAAAA,QAAQ,GAAGE,UAAU,CAACJ,GAAD,CAAV,GAAkB,IAAlB,GAAyB,IAApC;AACD;;AAED,eAAOE,QAAQ,CAACG,MAAT,GAAkBN,KAAK,CAACM,MAAxB,GAAiCH,QAAjC,GAA4CH,KAAnD;AACD,OAVM,CAAP;AAWD;AArBK;AADG,CAAb;AA0BAO,MAAM,CAACC,OAAP,GAAiBnB,MAAjB","sourcesContent":["var OptimizationLevel = require('../../../options/optimization-level').OptimizationLevel;\n\nvar TIME_VALUE = /^(\\-?[\\d\\.]+)(m?s)$/;\n\nvar plugin = {\n  level1: {\n    value: function time(name, value, options) {\n      if (!options.level[OptimizationLevel.One].replaceTimeUnits) {\n        return value;\n      }\n\n      if (!TIME_VALUE.test(value)) {\n        return value;\n      }\n\n      return value.replace(TIME_VALUE, function (match, val, unit) {\n        var newValue;\n\n        if (unit == 'ms') {\n          newValue = parseInt(val) / 1000 + 's';\n        } else if (unit == 's') {\n          newValue = parseFloat(val) * 1000 + 'ms';\n        }\n\n        return newValue.length < match.length ? newValue : match;\n      });\n    }\n  }\n};\n\nmodule.exports = plugin;\n"]},"metadata":{},"sourceType":"script"}