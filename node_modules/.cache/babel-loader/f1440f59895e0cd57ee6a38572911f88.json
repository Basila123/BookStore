{"ast":null,"code":"'use strict';\n\nconst BasePlugin = require('../plugin');\n\nconst {\n  IE_5_5,\n  IE_6,\n  IE_7\n} = require('../dictionary/browsers');\n\nconst {\n  PROPERTY\n} = require('../dictionary/identifiers');\n\nconst {\n  ATRULE,\n  DECL\n} = require('../dictionary/postcss');\n\nconst hacks = '!_$_&_*_)_=_%_+_,_._/_`_]_#_~_?_:_|'.split('_');\nmodule.exports = class LeadingStar extends BasePlugin {\n  constructor(result) {\n    super([IE_5_5, IE_6, IE_7], [ATRULE, DECL], result);\n  }\n\n  detect(node) {\n    if (node.type === DECL) {\n      // some values are not picked up by before, so ensure they are\n      // at the beginning of the value\n      hacks.forEach(hack => {\n        if (!node.prop.indexOf(hack)) {\n          this.push(node, {\n            identifier: PROPERTY,\n            hack: node.prop\n          });\n        }\n      });\n      let {\n        before\n      } = node.raws;\n\n      if (!before) {\n        return;\n      }\n\n      hacks.forEach(hack => {\n        if (before.includes(hack)) {\n          this.push(node, {\n            identifier: PROPERTY,\n            hack: `${before.trim()}${node.prop}`\n          });\n        }\n      });\n    } else {\n      // test for the @property: value; hack\n      let {\n        name\n      } = node;\n      let len = name.length - 1;\n\n      if (name.lastIndexOf(':') === len) {\n        this.push(node, {\n          identifier: PROPERTY,\n          hack: `@${name.substr(0, len)}`\n        });\n      }\n    }\n  }\n\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/stylehacks/src/plugins/leadingStar.js"],"names":["BasePlugin","require","IE_5_5","IE_6","IE_7","PROPERTY","ATRULE","DECL","hacks","split","module","exports","LeadingStar","constructor","result","detect","node","type","forEach","hack","prop","indexOf","push","identifier","before","raws","includes","trim","name","len","length","lastIndexOf","substr"],"mappings":"AAAA;;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,WAAD,CAA1B;;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,IAAyBH,OAAO,CAAC,wBAAD,CAAtC;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeJ,OAAO,CAAC,2BAAD,CAA5B;;AACA,MAAM;AAAEK,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAmBN,OAAO,CAAC,uBAAD,CAAhC;;AAEA,MAAMO,KAAK,GAAG,sCAAsCC,KAAtC,CAA4C,GAA5C,CAAd;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,WAAN,SAA0BZ,UAA1B,CAAqC;AACpDa,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,UAAM,CAACZ,MAAD,EAASC,IAAT,EAAeC,IAAf,CAAN,EAA4B,CAACE,MAAD,EAASC,IAAT,CAA5B,EAA4CO,MAA5C;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,QAAIA,IAAI,CAACC,IAAL,KAAcV,IAAlB,EAAwB;AACtB;AACA;AACAC,MAAAA,KAAK,CAACU,OAAN,CAAeC,IAAD,IAAU;AACtB,YAAI,CAACH,IAAI,CAACI,IAAL,CAAUC,OAAV,CAAkBF,IAAlB,CAAL,EAA8B;AAC5B,eAAKG,IAAL,CAAUN,IAAV,EAAgB;AACdO,YAAAA,UAAU,EAAElB,QADE;AAEdc,YAAAA,IAAI,EAAEH,IAAI,CAACI;AAFG,WAAhB;AAID;AACF,OAPD;AAQA,UAAI;AAAEI,QAAAA;AAAF,UAAaR,IAAI,CAACS,IAAtB;;AACA,UAAI,CAACD,MAAL,EAAa;AACX;AACD;;AACDhB,MAAAA,KAAK,CAACU,OAAN,CAAeC,IAAD,IAAU;AACtB,YAAIK,MAAM,CAACE,QAAP,CAAgBP,IAAhB,CAAJ,EAA2B;AACzB,eAAKG,IAAL,CAAUN,IAAV,EAAgB;AACdO,YAAAA,UAAU,EAAElB,QADE;AAEdc,YAAAA,IAAI,EAAG,GAAEK,MAAM,CAACG,IAAP,EAAc,GAAEX,IAAI,CAACI,IAAK;AAFrB,WAAhB;AAID;AACF,OAPD;AAQD,KAvBD,MAuBO;AACL;AACA,UAAI;AAAEQ,QAAAA;AAAF,UAAWZ,IAAf;AACA,UAAIa,GAAG,GAAGD,IAAI,CAACE,MAAL,GAAc,CAAxB;;AACA,UAAIF,IAAI,CAACG,WAAL,CAAiB,GAAjB,MAA0BF,GAA9B,EAAmC;AACjC,aAAKP,IAAL,CAAUN,IAAV,EAAgB;AACdO,UAAAA,UAAU,EAAElB,QADE;AAEdc,UAAAA,IAAI,EAAG,IAAGS,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeH,GAAf,CAAoB;AAFhB,SAAhB;AAID;AACF;AACF;;AAxCmD,CAAtD","sourcesContent":["'use strict';\nconst BasePlugin = require('../plugin');\nconst { IE_5_5, IE_6, IE_7 } = require('../dictionary/browsers');\nconst { PROPERTY } = require('../dictionary/identifiers');\nconst { ATRULE, DECL } = require('../dictionary/postcss');\n\nconst hacks = '!_$_&_*_)_=_%_+_,_._/_`_]_#_~_?_:_|'.split('_');\n\nmodule.exports = class LeadingStar extends BasePlugin {\n  constructor(result) {\n    super([IE_5_5, IE_6, IE_7], [ATRULE, DECL], result);\n  }\n\n  detect(node) {\n    if (node.type === DECL) {\n      // some values are not picked up by before, so ensure they are\n      // at the beginning of the value\n      hacks.forEach((hack) => {\n        if (!node.prop.indexOf(hack)) {\n          this.push(node, {\n            identifier: PROPERTY,\n            hack: node.prop,\n          });\n        }\n      });\n      let { before } = node.raws;\n      if (!before) {\n        return;\n      }\n      hacks.forEach((hack) => {\n        if (before.includes(hack)) {\n          this.push(node, {\n            identifier: PROPERTY,\n            hack: `${before.trim()}${node.prop}`,\n          });\n        }\n      });\n    } else {\n      // test for the @property: value; hack\n      let { name } = node;\n      let len = name.length - 1;\n      if (name.lastIndexOf(':') === len) {\n        this.push(node, {\n          identifier: PROPERTY,\n          hack: `@${name.substr(0, len)}`,\n        });\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}