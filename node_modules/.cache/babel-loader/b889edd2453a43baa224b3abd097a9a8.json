{"ast":null,"code":"'use strict';\n\nconst {\n  colord,\n  extend\n} = require('colord');\n\nconst namesPlugin = require('colord/plugins/names');\n\nconst minifierPlugin = require('colord/plugins/minify');\n\nextend([namesPlugin, minifierPlugin]);\n/**\n * Performs color value minification\n *\n * @param {string} input - CSS value\n * @param {boolean} options - object with colord.minify() options\n */\n\nmodule.exports = function minifyColor(input) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const instance = colord(input);\n\n  if (instance.isValid()) {\n    // Try to shorten the string if it is a valid CSS color value\n    const minified = instance.minify(options); // Fall back to the original input if it's smaller or has equal length\n\n    return minified.length < input.length ? minified : input.toLowerCase();\n  } else {\n    // Possibly malformed, so pass through\n    return input;\n  }\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-colormin/src/minifyColor.js"],"names":["colord","extend","require","namesPlugin","minifierPlugin","module","exports","minifyColor","input","options","instance","isValid","minified","minify","length","toLowerCase"],"mappings":"AAAA;;AACA,MAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAqBC,OAAO,CAAC,QAAD,CAAlC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,uBAAD,CAA9B;;AAEAD,MAAM,CAAC,CAACE,WAAD,EAAcC,cAAd,CAAD,CAAN;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,KAArB,EAA0C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACzD,QAAMC,QAAQ,GAAGV,MAAM,CAACQ,KAAD,CAAvB;;AAEA,MAAIE,QAAQ,CAACC,OAAT,EAAJ,EAAwB;AACtB;AACA,UAAMC,QAAQ,GAAGF,QAAQ,CAACG,MAAT,CAAgBJ,OAAhB,CAAjB,CAFsB,CAItB;;AACA,WAAOG,QAAQ,CAACE,MAAT,GAAkBN,KAAK,CAACM,MAAxB,GAAiCF,QAAjC,GAA4CJ,KAAK,CAACO,WAAN,EAAnD;AACD,GAND,MAMO;AACL;AACA,WAAOP,KAAP;AACD;AACF,CAbD","sourcesContent":["'use strict';\nconst { colord, extend } = require('colord');\nconst namesPlugin = require('colord/plugins/names');\nconst minifierPlugin = require('colord/plugins/minify');\n\nextend([namesPlugin, minifierPlugin]);\n\n/**\n * Performs color value minification\n *\n * @param {string} input - CSS value\n * @param {boolean} options - object with colord.minify() options\n */\nmodule.exports = function minifyColor(input, options = {}) {\n  const instance = colord(input);\n\n  if (instance.isValid()) {\n    // Try to shorten the string if it is a valid CSS color value\n    const minified = instance.minify(options);\n\n    // Fall back to the original input if it's smaller or has equal length\n    return minified.length < input.length ? minified : input.toLowerCase();\n  } else {\n    // Possibly malformed, so pass through\n    return input;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}