{"ast":null,"code":"'use strict';\n\nconst browserslist = require('browserslist');\n\nconst valueParser = require('postcss-value-parser');\n\nconst regexLowerCaseUPrefix = /^u(?=\\+)/;\n\nfunction unicode(range) {\n  const values = range.slice(2).split('-');\n\n  if (values.length < 2) {\n    return range;\n  }\n\n  const left = values[0].split('');\n  const right = values[1].split('');\n\n  if (left.length !== right.length) {\n    return range;\n  }\n\n  const merged = mergeRangeBounds(left, right);\n\n  if (merged) {\n    return merged;\n  }\n\n  return range;\n}\n/**\n * @param {string[]} left\n * @param {string[]} right\n * @return {false|string}\n */\n\n\nfunction mergeRangeBounds(left, right) {\n  let questionCounter = 0;\n  let group = 'u+';\n\n  for (const [index, value] of left.entries()) {\n    if (value === right[index] && questionCounter === 0) {\n      group = group + value;\n    } else if (value === '0' && right[index] === 'f') {\n      questionCounter++;\n      group = group + '?';\n    } else {\n      return false;\n    }\n  } // The maximum number of wildcard characters (?) for ranges is 5.\n\n\n  if (questionCounter < 6) {\n    return group;\n  } else {\n    return false;\n  }\n}\n/*\n * IE and Edge before 16 version ignore the unicode-range if the 'U' is lowercase\n *\n * https://caniuse.com/#search=unicode-range\n */\n\n\nfunction hasLowerCaseUPrefixBug(browser) {\n  return browserslist('ie <=11, edge <= 15').includes(browser);\n}\n\nfunction transform(value) {\n  let isLegacy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return valueParser(value).walk(child => {\n    if (child.type === 'unicode-range') {\n      const transformed = unicode(child.value.toLowerCase());\n      child.value = isLegacy ? transformed.replace(regexLowerCaseUPrefix, 'U') : transformed;\n    }\n\n    return false;\n  }).toString();\n}\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-normalize-unicode',\n\n    prepare(result) {\n      const cache = new Map();\n      const resultOpts = result.opts || {};\n      const browsers = browserslist(null, {\n        stats: resultOpts.stats,\n        path: __dirname,\n        env: resultOpts.env\n      });\n      const isLegacy = browsers.some(hasLowerCaseUPrefixBug);\n      return {\n        OnceExit(css) {\n          css.walkDecls(/^unicode-range$/i, decl => {\n            const value = decl.value;\n\n            if (cache.has(value)) {\n              decl.value = cache.get(value);\n              return;\n            }\n\n            const newValue = transform(value, isLegacy);\n            decl.value = newValue;\n            cache.set(value, newValue);\n          });\n        }\n\n      };\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-normalize-unicode/src/index.js"],"names":["browserslist","require","valueParser","regexLowerCaseUPrefix","unicode","range","values","slice","split","length","left","right","merged","mergeRangeBounds","questionCounter","group","index","value","entries","hasLowerCaseUPrefixBug","browser","includes","transform","isLegacy","walk","child","type","transformed","toLowerCase","replace","toString","pluginCreator","postcssPlugin","prepare","result","cache","Map","resultOpts","opts","browsers","stats","path","__dirname","env","some","OnceExit","css","walkDecls","decl","has","get","newValue","set","postcss","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst browserslist = require('browserslist');\nconst valueParser = require('postcss-value-parser');\n\nconst regexLowerCaseUPrefix = /^u(?=\\+)/;\n\nfunction unicode(range) {\n  const values = range.slice(2).split('-');\n\n  if (values.length < 2) {\n    return range;\n  }\n\n  const left = values[0].split('');\n  const right = values[1].split('');\n\n  if (left.length !== right.length) {\n    return range;\n  }\n\n  const merged = mergeRangeBounds(left, right);\n\n  if (merged) {\n    return merged;\n  }\n\n  return range;\n}\n/**\n * @param {string[]} left\n * @param {string[]} right\n * @return {false|string}\n */\nfunction mergeRangeBounds(left, right) {\n  let questionCounter = 0;\n  let group = 'u+';\n  for (const [index, value] of left.entries()) {\n    if (value === right[index] && questionCounter === 0) {\n      group = group + value;\n    } else if (value === '0' && right[index] === 'f') {\n      questionCounter++;\n      group = group + '?';\n    } else {\n      return false;\n    }\n  }\n  // The maximum number of wildcard characters (?) for ranges is 5.\n  if (questionCounter < 6) {\n    return group;\n  } else {\n    return false;\n  }\n}\n\n/*\n * IE and Edge before 16 version ignore the unicode-range if the 'U' is lowercase\n *\n * https://caniuse.com/#search=unicode-range\n */\n\nfunction hasLowerCaseUPrefixBug(browser) {\n  return browserslist('ie <=11, edge <= 15').includes(browser);\n}\n\nfunction transform(value, isLegacy = false) {\n  return valueParser(value)\n    .walk((child) => {\n      if (child.type === 'unicode-range') {\n        const transformed = unicode(child.value.toLowerCase());\n\n        child.value = isLegacy\n          ? transformed.replace(regexLowerCaseUPrefix, 'U')\n          : transformed;\n      }\n\n      return false;\n    })\n    .toString();\n}\n\nfunction pluginCreator() {\n  return {\n    postcssPlugin: 'postcss-normalize-unicode',\n    prepare(result) {\n      const cache = new Map();\n      const resultOpts = result.opts || {};\n      const browsers = browserslist(null, {\n        stats: resultOpts.stats,\n        path: __dirname,\n        env: resultOpts.env,\n      });\n      const isLegacy = browsers.some(hasLowerCaseUPrefixBug);\n\n      return {\n        OnceExit(css) {\n          css.walkDecls(/^unicode-range$/i, (decl) => {\n            const value = decl.value;\n\n            if (cache.has(value)) {\n              decl.value = cache.get(value);\n\n              return;\n            }\n\n            const newValue = transform(value, isLegacy);\n\n            decl.value = newValue;\n            cache.set(value, newValue);\n          });\n        },\n      };\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"]},"metadata":{},"sourceType":"script"}