{"ast":null,"code":"'use strict';\n\nmodule.exports = function (rule) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n\n  return props.every(p => rule.some(_ref => {\n    let {\n      prop\n    } = _ref;\n    return prop && prop.toLowerCase().includes(p);\n  }));\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-merge-longhand/src/lib/hasAllProps.js"],"names":["module","exports","rule","props","every","p","some","prop","toLowerCase","includes"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,IAAD,EAAoB;AAAA,oCAAVC,KAAU;AAAVA,IAAAA,KAAU;AAAA;;AACnC,SAAOA,KAAK,CAACC,KAAN,CAAaC,CAAD,IACjBH,IAAI,CAACI,IAAL,CAAU;AAAA,QAAC;AAAEC,MAAAA;AAAF,KAAD;AAAA,WAAcA,IAAI,IAAIA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BJ,CAA5B,CAAtB;AAAA,GAAV,CADK,CAAP;AAGD,CAJD","sourcesContent":["'use strict';\nmodule.exports = (rule, ...props) => {\n  return props.every((p) =>\n    rule.some(({ prop }) => prop && prop.toLowerCase().includes(p))\n  );\n};\n"]},"metadata":{},"sourceType":"script"}