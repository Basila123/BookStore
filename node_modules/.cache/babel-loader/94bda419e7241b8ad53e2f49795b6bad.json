{"ast":null,"code":"'use strict';\n\nmodule.exports = class BasePlugin {\n  constructor(targets, nodeTypes, result) {\n    this.nodes = [];\n    this.targets = new Set(targets);\n    this.nodeTypes = new Set(nodeTypes);\n    this.result = result;\n  }\n\n  push(node, metadata) {\n    node._stylehacks = Object.assign({}, metadata, {\n      message: `Bad ${metadata.identifier}: ${metadata.hack}`,\n      browsers: this.targets\n    });\n    this.nodes.push(node);\n  }\n\n  any(node) {\n    if (this.nodeTypes.has(node.type)) {\n      this.detect(node);\n      return !!node._stylehacks;\n    }\n\n    return false;\n  }\n\n  detectAndResolve(node) {\n    this.nodes = [];\n    this.detect(node);\n    return this.resolve();\n  }\n\n  detectAndWarn(node) {\n    this.nodes = [];\n    this.detect(node);\n    return this.warn();\n  } // eslint-disable-next-line no-unused-vars\n\n\n  detect(node) {\n    throw new Error('You need to implement this method in a subclass.');\n  }\n\n  resolve() {\n    return this.nodes.forEach(node => node.remove());\n  }\n\n  warn() {\n    return this.nodes.forEach(node => {\n      const {\n        message,\n        browsers,\n        identifier,\n        hack\n      } = node._stylehacks;\n      return node.warn(this.result, message, {\n        browsers,\n        identifier,\n        hack\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/stylehacks/src/plugin.js"],"names":["module","exports","BasePlugin","constructor","targets","nodeTypes","result","nodes","Set","push","node","metadata","_stylehacks","Object","assign","message","identifier","hack","browsers","any","has","type","detect","detectAndResolve","resolve","detectAndWarn","warn","Error","forEach","remove"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,UAAN,CAAiB;AAChCC,EAAAA,WAAW,CAACC,OAAD,EAAUC,SAAV,EAAqBC,MAArB,EAA6B;AACtC,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKH,OAAL,GAAe,IAAII,GAAJ,CAAQJ,OAAR,CAAf;AACA,SAAKC,SAAL,GAAiB,IAAIG,GAAJ,CAAQH,SAAR,CAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;AAEDG,EAAAA,IAAI,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACnBD,IAAAA,IAAI,CAACE,WAAL,GAAmBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,QAAlB,EAA4B;AAC7CI,MAAAA,OAAO,EAAG,OAAMJ,QAAQ,CAACK,UAAW,KAAIL,QAAQ,CAACM,IAAK,EADT;AAE7CC,MAAAA,QAAQ,EAAE,KAAKd;AAF8B,KAA5B,CAAnB;AAKA,SAAKG,KAAL,CAAWE,IAAX,CAAgBC,IAAhB;AACD;;AAEDS,EAAAA,GAAG,CAACT,IAAD,EAAO;AACR,QAAI,KAAKL,SAAL,CAAee,GAAf,CAAmBV,IAAI,CAACW,IAAxB,CAAJ,EAAmC;AACjC,WAAKC,MAAL,CAAYZ,IAAZ;AAEA,aAAO,CAAC,CAACA,IAAI,CAACE,WAAd;AACD;;AAED,WAAO,KAAP;AACD;;AAEDW,EAAAA,gBAAgB,CAACb,IAAD,EAAO;AACrB,SAAKH,KAAL,GAAa,EAAb;AAEA,SAAKe,MAAL,CAAYZ,IAAZ;AAEA,WAAO,KAAKc,OAAL,EAAP;AACD;;AAEDC,EAAAA,aAAa,CAACf,IAAD,EAAO;AAClB,SAAKH,KAAL,GAAa,EAAb;AAEA,SAAKe,MAAL,CAAYZ,IAAZ;AAEA,WAAO,KAAKgB,IAAL,EAAP;AACD,GAzC+B,CA0ChC;;;AACAJ,EAAAA,MAAM,CAACZ,IAAD,EAAO;AACX,UAAM,IAAIiB,KAAJ,CAAU,kDAAV,CAAN;AACD;;AAEDH,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKjB,KAAL,CAAWqB,OAAX,CAAoBlB,IAAD,IAAUA,IAAI,CAACmB,MAAL,EAA7B,CAAP;AACD;;AAEDH,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKnB,KAAL,CAAWqB,OAAX,CAAoBlB,IAAD,IAAU;AAClC,YAAM;AAAEK,QAAAA,OAAF;AAAWG,QAAAA,QAAX;AAAqBF,QAAAA,UAArB;AAAiCC,QAAAA;AAAjC,UAA0CP,IAAI,CAACE,WAArD;AAEA,aAAOF,IAAI,CAACgB,IAAL,CAAU,KAAKpB,MAAf,EAAuBS,OAAvB,EAAgC;AAAEG,QAAAA,QAAF;AAAYF,QAAAA,UAAZ;AAAwBC,QAAAA;AAAxB,OAAhC,CAAP;AACD,KAJM,CAAP;AAKD;;AAzD+B,CAAlC","sourcesContent":["'use strict';\nmodule.exports = class BasePlugin {\n  constructor(targets, nodeTypes, result) {\n    this.nodes = [];\n    this.targets = new Set(targets);\n    this.nodeTypes = new Set(nodeTypes);\n    this.result = result;\n  }\n\n  push(node, metadata) {\n    node._stylehacks = Object.assign({}, metadata, {\n      message: `Bad ${metadata.identifier}: ${metadata.hack}`,\n      browsers: this.targets,\n    });\n\n    this.nodes.push(node);\n  }\n\n  any(node) {\n    if (this.nodeTypes.has(node.type)) {\n      this.detect(node);\n\n      return !!node._stylehacks;\n    }\n\n    return false;\n  }\n\n  detectAndResolve(node) {\n    this.nodes = [];\n\n    this.detect(node);\n\n    return this.resolve();\n  }\n\n  detectAndWarn(node) {\n    this.nodes = [];\n\n    this.detect(node);\n\n    return this.warn();\n  }\n  // eslint-disable-next-line no-unused-vars\n  detect(node) {\n    throw new Error('You need to implement this method in a subclass.');\n  }\n\n  resolve() {\n    return this.nodes.forEach((node) => node.remove());\n  }\n\n  warn() {\n    return this.nodes.forEach((node) => {\n      const { message, browsers, identifier, hack } = node._stylehacks;\n\n      return node.warn(this.result, message, { browsers, identifier, hack });\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"script"}