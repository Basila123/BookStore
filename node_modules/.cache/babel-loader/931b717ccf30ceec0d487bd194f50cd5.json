{"ast":null,"code":"'use strict';\n\nvar CSSClassList = function (node) {\n  this.parentNode = node;\n  this.classNames = new Set();\n  const value = node.attributes.class;\n\n  if (value != null) {\n    this.addClassValueHandler();\n    this.setClassValue(value);\n  }\n}; // attr.class.value\n\n\nCSSClassList.prototype.addClassValueHandler = function () {\n  Object.defineProperty(this.parentNode.attributes, 'class', {\n    get: this.getClassValue.bind(this),\n    set: this.setClassValue.bind(this),\n    enumerable: true,\n    configurable: true\n  });\n};\n\nCSSClassList.prototype.getClassValue = function () {\n  var arrClassNames = Array.from(this.classNames);\n  return arrClassNames.join(' ');\n};\n\nCSSClassList.prototype.setClassValue = function (newValue) {\n  if (typeof newValue === 'undefined') {\n    this.classNames.clear();\n    return;\n  }\n\n  var arrClassNames = newValue.split(' ');\n  this.classNames = new Set(arrClassNames);\n};\n\nCSSClassList.prototype.add = function\n  /* variadic */\n() {\n  this.addClassValueHandler();\n  Object.values(arguments).forEach(this._addSingle.bind(this));\n};\n\nCSSClassList.prototype._addSingle = function (className) {\n  this.classNames.add(className);\n};\n\nCSSClassList.prototype.remove = function\n  /* variadic */\n() {\n  this.addClassValueHandler();\n  Object.values(arguments).forEach(this._removeSingle.bind(this));\n};\n\nCSSClassList.prototype._removeSingle = function (className) {\n  this.classNames.delete(className);\n};\n\nCSSClassList.prototype.item = function (index) {\n  var arrClassNames = Array.from(this.classNames);\n  return arrClassNames[index];\n};\n\nCSSClassList.prototype.toggle = function (className, force) {\n  if (this.contains(className) || force === false) {\n    this.classNames.delete(className);\n  }\n\n  this.classNames.add(className);\n};\n\nCSSClassList.prototype.contains = function (className) {\n  return this.classNames.has(className);\n};\n\nmodule.exports = CSSClassList;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-svgo/node_modules/svgo/lib/svgo/css-class-list.js"],"names":["CSSClassList","node","parentNode","classNames","Set","value","attributes","class","addClassValueHandler","setClassValue","prototype","Object","defineProperty","get","getClassValue","bind","set","enumerable","configurable","arrClassNames","Array","from","join","newValue","clear","split","add","values","arguments","forEach","_addSingle","className","remove","_removeSingle","delete","item","index","toggle","force","contains","has","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar CSSClassList = function (node) {\n  this.parentNode = node;\n  this.classNames = new Set();\n  const value = node.attributes.class;\n  if (value != null) {\n    this.addClassValueHandler();\n    this.setClassValue(value);\n  }\n};\n\n// attr.class.value\n\nCSSClassList.prototype.addClassValueHandler = function () {\n  Object.defineProperty(this.parentNode.attributes, 'class', {\n    get: this.getClassValue.bind(this),\n    set: this.setClassValue.bind(this),\n    enumerable: true,\n    configurable: true,\n  });\n};\n\nCSSClassList.prototype.getClassValue = function () {\n  var arrClassNames = Array.from(this.classNames);\n  return arrClassNames.join(' ');\n};\n\nCSSClassList.prototype.setClassValue = function (newValue) {\n  if (typeof newValue === 'undefined') {\n    this.classNames.clear();\n    return;\n  }\n  var arrClassNames = newValue.split(' ');\n  this.classNames = new Set(arrClassNames);\n};\n\nCSSClassList.prototype.add = function (/* variadic */) {\n  this.addClassValueHandler();\n  Object.values(arguments).forEach(this._addSingle.bind(this));\n};\n\nCSSClassList.prototype._addSingle = function (className) {\n  this.classNames.add(className);\n};\n\nCSSClassList.prototype.remove = function (/* variadic */) {\n  this.addClassValueHandler();\n  Object.values(arguments).forEach(this._removeSingle.bind(this));\n};\n\nCSSClassList.prototype._removeSingle = function (className) {\n  this.classNames.delete(className);\n};\n\nCSSClassList.prototype.item = function (index) {\n  var arrClassNames = Array.from(this.classNames);\n  return arrClassNames[index];\n};\n\nCSSClassList.prototype.toggle = function (className, force) {\n  if (this.contains(className) || force === false) {\n    this.classNames.delete(className);\n  }\n  this.classNames.add(className);\n};\n\nCSSClassList.prototype.contains = function (className) {\n  return this.classNames.has(className);\n};\n\nmodule.exports = CSSClassList;\n"]},"metadata":{},"sourceType":"script"}