{"ast":null,"code":"'use strict';\n\nconst colors = require('./colornames.js');\n\nconst widths = new Set(['thin', 'medium', 'thick']);\nconst styles = new Set(['none', 'hidden', 'dotted', 'dashed', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset']);\n\nfunction isStyle(value) {\n  return value && styles.has(value.toLowerCase());\n}\n\nfunction isWidth(value) {\n  return value && widths.has(value.toLowerCase()) || /^(\\d+(\\.\\d+)?|\\.\\d+)(\\w+)?$/.test(value);\n}\n\nfunction isColor(value) {\n  if (!value) {\n    return false;\n  }\n\n  value = value.toLowerCase();\n\n  if (/rgba?\\(/.test(value)) {\n    return true;\n  }\n\n  if (/hsla?\\(/.test(value)) {\n    return true;\n  }\n\n  if (/#([0-9a-z]{6}|[0-9a-z]{3})/.test(value)) {\n    return true;\n  }\n\n  if (value === 'transparent') {\n    return true;\n  }\n\n  if (value === 'currentcolor') {\n    return true;\n  }\n\n  return colors.has(value);\n}\n\nfunction isValidWsc(wscs) {\n  const validWidth = isWidth(wscs[0]);\n  const validStyle = isStyle(wscs[1]);\n  const validColor = isColor(wscs[2]);\n  return validWidth && validStyle || validWidth && validColor || validStyle && validColor;\n}\n\nmodule.exports = {\n  isStyle,\n  isWidth,\n  isColor,\n  isValidWsc\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-merge-longhand/src/lib/validateWsc.js"],"names":["colors","require","widths","Set","styles","isStyle","value","has","toLowerCase","isWidth","test","isColor","isValidWsc","wscs","validWidth","validStyle","validColor","module","exports"],"mappings":"AAAA;;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAAtB;;AAEA,MAAMC,MAAM,GAAG,IAAIC,GAAJ,CAAQ,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAR,CAAf;AACA,MAAMC,MAAM,GAAG,IAAID,GAAJ,CAAQ,CACrB,MADqB,EAErB,QAFqB,EAGrB,QAHqB,EAIrB,QAJqB,EAKrB,OALqB,EAMrB,QANqB,EAOrB,QAPqB,EAQrB,OARqB,EASrB,OATqB,EAUrB,QAVqB,CAAR,CAAf;;AAaA,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,SAAOA,KAAK,IAAIF,MAAM,CAACG,GAAP,CAAWD,KAAK,CAACE,WAAN,EAAX,CAAhB;AACD;;AAED,SAASC,OAAT,CAAiBH,KAAjB,EAAwB;AACtB,SACGA,KAAK,IAAIJ,MAAM,CAACK,GAAP,CAAWD,KAAK,CAACE,WAAN,EAAX,CAAV,IACA,8BAA8BE,IAA9B,CAAmCJ,KAAnC,CAFF;AAID;;AAED,SAASK,OAAT,CAAiBL,KAAjB,EAAwB;AACtB,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AAEDA,EAAAA,KAAK,GAAGA,KAAK,CAACE,WAAN,EAAR;;AAEA,MAAI,UAAUE,IAAV,CAAeJ,KAAf,CAAJ,EAA2B;AACzB,WAAO,IAAP;AACD;;AAED,MAAI,UAAUI,IAAV,CAAeJ,KAAf,CAAJ,EAA2B;AACzB,WAAO,IAAP;AACD;;AAED,MAAI,6BAA6BI,IAA7B,CAAkCJ,KAAlC,CAAJ,EAA8C;AAC5C,WAAO,IAAP;AACD;;AAED,MAAIA,KAAK,KAAK,aAAd,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAIA,KAAK,KAAK,cAAd,EAA8B;AAC5B,WAAO,IAAP;AACD;;AAED,SAAON,MAAM,CAACO,GAAP,CAAWD,KAAX,CAAP;AACD;;AAED,SAASM,UAAT,CAAoBC,IAApB,EAA0B;AACxB,QAAMC,UAAU,GAAGL,OAAO,CAACI,IAAI,CAAC,CAAD,CAAL,CAA1B;AACA,QAAME,UAAU,GAAGV,OAAO,CAACQ,IAAI,CAAC,CAAD,CAAL,CAA1B;AACA,QAAMG,UAAU,GAAGL,OAAO,CAACE,IAAI,CAAC,CAAD,CAAL,CAA1B;AAEA,SACGC,UAAU,IAAIC,UAAf,IACCD,UAAU,IAAIE,UADf,IAECD,UAAU,IAAIC,UAHjB;AAKD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AAAEb,EAAAA,OAAF;AAAWI,EAAAA,OAAX;AAAoBE,EAAAA,OAApB;AAA6BC,EAAAA;AAA7B,CAAjB","sourcesContent":["'use strict';\nconst colors = require('./colornames.js');\n\nconst widths = new Set(['thin', 'medium', 'thick']);\nconst styles = new Set([\n  'none',\n  'hidden',\n  'dotted',\n  'dashed',\n  'solid',\n  'double',\n  'groove',\n  'ridge',\n  'inset',\n  'outset',\n]);\n\nfunction isStyle(value) {\n  return value && styles.has(value.toLowerCase());\n}\n\nfunction isWidth(value) {\n  return (\n    (value && widths.has(value.toLowerCase())) ||\n    /^(\\d+(\\.\\d+)?|\\.\\d+)(\\w+)?$/.test(value)\n  );\n}\n\nfunction isColor(value) {\n  if (!value) {\n    return false;\n  }\n\n  value = value.toLowerCase();\n\n  if (/rgba?\\(/.test(value)) {\n    return true;\n  }\n\n  if (/hsla?\\(/.test(value)) {\n    return true;\n  }\n\n  if (/#([0-9a-z]{6}|[0-9a-z]{3})/.test(value)) {\n    return true;\n  }\n\n  if (value === 'transparent') {\n    return true;\n  }\n\n  if (value === 'currentcolor') {\n    return true;\n  }\n\n  return colors.has(value);\n}\n\nfunction isValidWsc(wscs) {\n  const validWidth = isWidth(wscs[0]);\n  const validStyle = isStyle(wscs[1]);\n  const validColor = isColor(wscs[2]);\n\n  return (\n    (validWidth && validStyle) ||\n    (validWidth && validColor) ||\n    (validStyle && validColor)\n  );\n}\n\nmodule.exports = { isStyle, isWidth, isColor, isValidWsc };\n"]},"metadata":{},"sourceType":"script"}