{"ast":null,"code":"'use strict';\n/**\n * @param {postcss.ChildNode} nodeA\n * @param {postcss.ChildNode} nodeB\n * @return {boolean}\n */\n\nfunction checkMatch(nodeA, nodeB) {\n  if (nodeA.type === 'atrule' && nodeB.type === 'atrule') {\n    return nodeA.params === nodeB.params && nodeA.name.toLowerCase() === nodeB.name.toLowerCase();\n  }\n\n  return nodeA.type === nodeB.type;\n}\n/**\n * @param {postcss.ChildNode} nodeA\n * @param {postcss.ChildNode} nodeB\n * @return {boolean}\n */\n\n\nmodule.exports = function sameParent(nodeA, nodeB) {\n  if (!nodeA.parent) {\n    // A is orphaned, return if B is orphaned as well\n    return !nodeB.parent;\n  }\n\n  if (!nodeB.parent) {\n    // B is orphaned and A is not\n    return false;\n  } // Check if parents match\n\n\n  if (!checkMatch(nodeA.parent, nodeB.parent)) {\n    return false;\n  } // Check parents' parents\n\n\n  return sameParent(nodeA.parent, nodeB.parent);\n};","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/cssnano-utils/src/sameParent.js"],"names":["checkMatch","nodeA","nodeB","type","params","name","toLowerCase","module","exports","sameParent","parent"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkC;AAChC,MAAID,KAAK,CAACE,IAAN,KAAe,QAAf,IAA2BD,KAAK,CAACC,IAAN,KAAe,QAA9C,EAAwD;AACtD,WACEF,KAAK,CAACG,MAAN,KAAiBF,KAAK,CAACE,MAAvB,IACAH,KAAK,CAACI,IAAN,CAAWC,WAAX,OAA6BJ,KAAK,CAACG,IAAN,CAAWC,WAAX,EAF/B;AAID;;AACD,SAAOL,KAAK,CAACE,IAAN,KAAeD,KAAK,CAACC,IAA5B;AACD;AAED;AACA;AACA;AACA;AACA;;;AACAI,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBR,KAApB,EAA2BC,KAA3B,EAAkC;AACjD,MAAI,CAACD,KAAK,CAACS,MAAX,EAAmB;AACjB;AACA,WAAO,CAACR,KAAK,CAACQ,MAAd;AACD;;AAED,MAAI,CAACR,KAAK,CAACQ,MAAX,EAAmB;AACjB;AACA,WAAO,KAAP;AACD,GATgD,CAWjD;;;AACA,MAAI,CAACV,UAAU,CAACC,KAAK,CAACS,MAAP,EAAeR,KAAK,CAACQ,MAArB,CAAf,EAA6C;AAC3C,WAAO,KAAP;AACD,GAdgD,CAgBjD;;;AACA,SAAOD,UAAU,CAACR,KAAK,CAACS,MAAP,EAAeR,KAAK,CAACQ,MAArB,CAAjB;AACD,CAlBD","sourcesContent":["'use strict';\n/**\n * @param {postcss.ChildNode} nodeA\n * @param {postcss.ChildNode} nodeB\n * @return {boolean}\n */\nfunction checkMatch(nodeA, nodeB) {\n  if (nodeA.type === 'atrule' && nodeB.type === 'atrule') {\n    return (\n      nodeA.params === nodeB.params &&\n      nodeA.name.toLowerCase() === nodeB.name.toLowerCase()\n    );\n  }\n  return nodeA.type === nodeB.type;\n}\n\n/**\n * @param {postcss.ChildNode} nodeA\n * @param {postcss.ChildNode} nodeB\n * @return {boolean}\n */\nmodule.exports = function sameParent(nodeA, nodeB) {\n  if (!nodeA.parent) {\n    // A is orphaned, return if B is orphaned as well\n    return !nodeB.parent;\n  }\n\n  if (!nodeB.parent) {\n    // B is orphaned and A is not\n    return false;\n  }\n\n  // Check if parents match\n  if (!checkMatch(nodeA.parent, nodeB.parent)) {\n    return false;\n  }\n\n  // Check parents' parents\n  return sameParent(nodeA.parent, nodeB.parent);\n};\n"]},"metadata":{},"sourceType":"script"}