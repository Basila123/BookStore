{"ast":null,"code":"'use strict';\n\nconst browserslist = require('browserslist');\n\nconst valueParser = require('postcss-value-parser');\n\nconst {\n  getArguments\n} = require('cssnano-utils');\n/**\n * Return the greatest common divisor\n * of two numbers.\n */\n\n\nfunction gcd(a, b) {\n  return b ? gcd(b, a % b) : a;\n}\n\nfunction aspectRatio(a, b) {\n  const divisor = gcd(a, b);\n  return [a / divisor, b / divisor];\n}\n\nfunction split(args) {\n  return args.map(arg => valueParser.stringify(arg)).join('');\n}\n\nfunction removeNode(node) {\n  node.value = '';\n  node.type = 'word';\n}\n\nfunction sortAndDedupe(items) {\n  const a = [...new Set(items)];\n  a.sort();\n  return a.join();\n}\n\nfunction transform(legacy, rule) {\n  const ruleName = rule.name.toLowerCase(); // We should re-arrange parameters only for `@media` and `@supports` at-rules\n\n  if (!rule.params || !['media', 'supports'].includes(ruleName)) {\n    return;\n  }\n\n  const params = valueParser(rule.params);\n  params.walk((node, index) => {\n    if (node.type === 'div' || node.type === 'function') {\n      node.before = node.after = '';\n\n      if (node.type === 'function' && node.nodes[4] && node.nodes[0].value.toLowerCase().indexOf('-aspect-ratio') === 3) {\n        const [a, b] = aspectRatio(Number(node.nodes[2].value), Number(node.nodes[4].value));\n        node.nodes[2].value = a.toString();\n        node.nodes[4].value = b.toString();\n      }\n    } else if (node.type === 'space') {\n      node.value = ' ';\n    } else {\n      const prevWord = params.nodes[index - 2];\n\n      if (node.value.toLowerCase() === 'all' && rule.name.toLowerCase() === 'media' && !prevWord) {\n        const nextWord = params.nodes[index + 2];\n\n        if (!legacy || nextWord) {\n          removeNode(node);\n        }\n\n        if (nextWord && nextWord.value.toLowerCase() === 'and') {\n          const nextSpace = params.nodes[index + 1];\n          const secondSpace = params.nodes[index + 3];\n          removeNode(nextWord);\n          removeNode(nextSpace);\n          removeNode(secondSpace);\n        }\n      }\n    }\n  }, true);\n  rule.params = sortAndDedupe(getArguments(params).map(split));\n\n  if (!rule.params.length) {\n    rule.raws.afterName = '';\n  }\n}\n\nfunction hasAllBug(browser) {\n  return ['ie 10', 'ie 11'].includes(browser);\n}\n\nfunction pluginCreator() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const browsers = browserslist(null, {\n    stats: options.stats,\n    path: __dirname,\n    env: options.env\n  });\n  return {\n    postcssPlugin: 'postcss-minify-params',\n\n    OnceExit(css) {\n      css.walkAtRules(transform.bind(null, browsers.some(hasAllBug)));\n    }\n\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;","map":{"version":3,"sources":["/home/hp/Js/React_practise/BookStore/books/node_modules/postcss-minify-params/src/index.js"],"names":["browserslist","require","valueParser","getArguments","gcd","a","b","aspectRatio","divisor","split","args","map","arg","stringify","join","removeNode","node","value","type","sortAndDedupe","items","Set","sort","transform","legacy","rule","ruleName","name","toLowerCase","params","includes","walk","index","before","after","nodes","indexOf","Number","toString","prevWord","nextWord","nextSpace","secondSpace","length","raws","afterName","hasAllBug","browser","pluginCreator","options","browsers","stats","path","__dirname","env","postcssPlugin","OnceExit","css","walkAtRules","bind","some","postcss","module","exports"],"mappings":"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","sourcesContent":["'use strict';\nconst browserslist = require('browserslist');\nconst valueParser = require('postcss-value-parser');\nconst { getArguments } = require('cssnano-utils');\n\n/**\n * Return the greatest common divisor\n * of two numbers.\n */\n\nfunction gcd(a, b) {\n  return b ? gcd(b, a % b) : a;\n}\n\nfunction aspectRatio(a, b) {\n  const divisor = gcd(a, b);\n\n  return [a / divisor, b / divisor];\n}\n\nfunction split(args) {\n  return args.map((arg) => valueParser.stringify(arg)).join('');\n}\n\nfunction removeNode(node) {\n  node.value = '';\n  node.type = 'word';\n}\n\nfunction sortAndDedupe(items) {\n  const a = [...new Set(items)];\n  a.sort();\n  return a.join();\n}\n\nfunction transform(legacy, rule) {\n  const ruleName = rule.name.toLowerCase();\n\n  // We should re-arrange parameters only for `@media` and `@supports` at-rules\n  if (!rule.params || !['media', 'supports'].includes(ruleName)) {\n    return;\n  }\n\n  const params = valueParser(rule.params);\n\n  params.walk((node, index) => {\n    if (node.type === 'div' || node.type === 'function') {\n      node.before = node.after = '';\n\n      if (\n        node.type === 'function' &&\n        node.nodes[4] &&\n        node.nodes[0].value.toLowerCase().indexOf('-aspect-ratio') === 3\n      ) {\n        const [a, b] = aspectRatio(\n          Number(node.nodes[2].value),\n          Number(node.nodes[4].value)\n        );\n\n        node.nodes[2].value = a.toString();\n        node.nodes[4].value = b.toString();\n      }\n    } else if (node.type === 'space') {\n      node.value = ' ';\n    } else {\n      const prevWord = params.nodes[index - 2];\n\n      if (\n        node.value.toLowerCase() === 'all' &&\n        rule.name.toLowerCase() === 'media' &&\n        !prevWord\n      ) {\n        const nextWord = params.nodes[index + 2];\n\n        if (!legacy || nextWord) {\n          removeNode(node);\n        }\n\n        if (nextWord && nextWord.value.toLowerCase() === 'and') {\n          const nextSpace = params.nodes[index + 1];\n          const secondSpace = params.nodes[index + 3];\n\n          removeNode(nextWord);\n          removeNode(nextSpace);\n          removeNode(secondSpace);\n        }\n      }\n    }\n  }, true);\n\n  rule.params = sortAndDedupe(getArguments(params).map(split));\n\n  if (!rule.params.length) {\n    rule.raws.afterName = '';\n  }\n}\n\nfunction hasAllBug(browser) {\n  return ['ie 10', 'ie 11'].includes(browser);\n}\n\nfunction pluginCreator(options = {}) {\n  const browsers = browserslist(null, {\n    stats: options.stats,\n    path: __dirname,\n    env: options.env,\n  });\n\n  return {\n    postcssPlugin: 'postcss-minify-params',\n\n    OnceExit(css) {\n      css.walkAtRules(transform.bind(null, browsers.some(hasAllBug)));\n    },\n  };\n}\n\npluginCreator.postcss = true;\nmodule.exports = pluginCreator;\n"]},"metadata":{},"sourceType":"script"}